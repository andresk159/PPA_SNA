

\pagebreak

### Red de inversión teniendo en cuenta R2a


```{r rinvestINPPA, echo=FALSE,fig.width=13, fig.height=11,warning=FALSE,strip.white=FALSE}

d2 <- d %>% dplyr::mutate(start = case_when(
  R2b == "2" ~ R_Destiny_ID,
  TRUE ~ R_Start_ID 
),
end = case_when(
  R2b == "2" ~ R_Start_ID ,
  TRUE ~ R_Destiny_ID 
)) 
# duplicar e invertir las relacions recibio/aporto
dopler <- d2 %>% 
  dplyr::filter(R2b == "3") %>%
  dplyr::mutate(start =  R_Destiny_ID, 
                end = R_Start_ID) %>% 
  dplyr::select(start, end, R2c, R2a, R2b)
# adicionar filas duplicadas al edgelist
 d2 <- d2 %>% 
  bind_rows(., dopler) %>%
  dplyr::select(R_Start_ID = start, R_Destiny_ID = end, R2c, R2a, R2b)

 
  net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))
  
 

colrs <- c("olivedrab3", "tomato", "gold", "gray40")
V(net)$color <- colrs[as.numeric(as.factor(V(net)$V1))]

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

edge.col <- tibble(var = E(net)$R2a) %>% 
  dplyr::mutate(col = dplyr::recode(var,  "0" = "gray48", "1" =  "darkgreen",  "2" = "seashell1", "3" =  "seashell3" )) %>% pull(col) 
  

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.8, 
     rescale= TRUE,
     edge.color= edge.col,
     edge.width = 2.2,
     vertex.size = 6.5,
     vertex.shape = vtx_shp$shape,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.90,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B", "Group C", "SHAPE","Reporter", "Partner", "Both"), pch = c(21, 21, 21,21, 15,15, 17, 16),
       col= c("white","black", "black", "black"), pt.bg= c(colrs, "white","black", "black", "black"), pt.cex=2, cex=.8, bty = "n",  title="GROUPS")
legend("bottomright", c( "In PPA", "Out PPA", "Não sei dizer", "Outro"), lty = c(1,1, 1, 1), col = c("darkgreen", "gray48", "seashell3", "seashell3"), lwd = c(3,3,3,3), pt.cex=2, cex=0.8, bty="n", title = "R2a")

# frecuencias por cada nodo de los tipos de edge que tiene (R2a)
summ <-  tibble(var = E(net)$R2a) %>%
  dplyr::mutate( start  = igraph::ends(net, es=E(net), names=T)[,1]) %>%
  left_join(., groups, by = c("start" = "ID"))


summ %>%
  group_by( V1, var) %>%
  tally() %>%
  dplyr::mutate(freq = round(n/sum(n),2)*100, freq = paste0(freq, "%") , var = case_when(
    var == "0" ~ "Out PPA",
    var == "1" ~ "In PPA",
    var == "3" ~ "Não sei dizer",
    TRUE ~ "Outro"
  )) %>% 
  dplyr::select(Group = V1, R2a = var, Count = n, Frequency = freq) %>%
  ungroup() %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "invest_R2a_summa", ".csv")) %>% 
  flextable(.) 


summ %>%
 left_join(., vtx_shp, by = c("start" = "nodos")) %>% 
  dplyr::mutate(var = case_when(
    var == "0" ~ "Out_PPA",
    var == "1" ~ "In_PPA",
    var == "2" ~ "Nao_sei_dizer",
    TRUE ~ "Outro"
  )) %>% 
  group_by(start, var) %>%
  tally() %>% 
  pivot_wider(., names_from = var, values_from = n) %>% 
  ungroup() %>% 
  mutate_all(., .funs = function(i){
    x <- ifelse(is.na(i), 0, i)
    return(x)
  }) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::mutate(Nao_sei_dizer = if("Nao_sei_dizer" %in% names(.)){Nao_sei_dizer}else{0},
                total = (In_PPA + Out_PPA + Nao_sei_dizer), 
                In_PPA_frq = round(In_PPA/total,2)*100,
                Out_PPA_frq = round(Out_PPA/total,2)*100,
                 Nao_sei_dizer_frq =  round(Nao_sei_dizer/total,2)*100) %>% 
  dplyr::select(ID = start, Group=V1, In_PPA:Nao_sei_dizer, In_PPA_frq:Nao_sei_dizer_frq) %>% 
  dplyr::left_join(., groups %>% dplyr::select(ID, Nome) , by = ("ID" = "ID")) %>% 
  dplyr::left_join(., vtx_shp, by = c("ID" = "nodos")) %>% 
  dplyr::select(ID, Type = shp, -shape, everything()) %>% 
  dplyr::select(-shape) %>% 
  data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "invest_R2a_summ_by_nod", ".csv"))  %>% 
  flextable(.) %>% set_caption(., caption = "R2a summary by Node")


#Porcentaje in_ppa y out_ppa por cada grupo
red <- "invest"

summ_deg <- summ %>%
  dplyr::mutate(var = case_when(
    var == "0" ~ "Out PPA",
    var == "1" ~ "In PPA",
    var == "2" ~ "Não sei dizer",
    TRUE ~ "Outro"
  )) %>% 
  pivot_wider(id_cols = Nome, names_from = var, values_from = var, values_fn = list(var = length)) %>% 
  mutate_if(is.numeric, function(i){ifelse(is.na(i), 0, i)}) %>% 
  dplyr::left_join(., groups %>% select(Nome, V1, ID), by = c("Nome" = "Nome")) %>% 
  dplyr::select(ID, group = V1, Nome, in_deg = `In PPA`, out_deg = `Out PPA`, not_avaliable = `Não sei dizer`)

### conteos por cada empresa 

summ_deg %>% 
  dplyr::left_join(., entrevistados,  by = c("ID" = "ID")) %>% 
  dplyr::left_join(.,  type_org %>%  select(ID, V39a_lab, V39b_lab),  by = c("ID" = "ID")) %>%
  dplyr::mutate(sum_all = in_deg +out_deg+not_avaliable,
                percentage_in_ppa = paste0(round((in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((not_avaliable/sum(sum_all))*100,1),"%")
                ) %>% 
  dplyr::select(group, Nome, "count_in_ppa" = in_deg, "count_out_ppa" = out_deg, "count_not_avaliable" = not_avaliable, percentage_in_ppa:percentage_not_av, status:V39b_lab) %>%   
  write_csv(., path = paste0(tbl_pth, red,"_inPPA_percent_all", ".csv")) 

### porcentages por grupo
summ_deg %>% 
  dplyr::group_by(group) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group, 
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>% 
  write_csv(., path = paste0(tbl_pth, red,"_inPPA_percent", ".csv")) 

# por tipo de empresa v39a
summ_deg %>% 
  dplyr::left_join(., type_org %>%  select(ID, V39a_lab), by = c("ID" = "ID")) %>% 
  dplyr::group_by(group, V39a_lab) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group,
                V39a_lab,
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>% 
  write_csv(., path = paste0(tbl_pth, red,"_inPPA_perc_by_V39a", ".csv"))  

# por tipo de empresa v39b
summ_deg %>% 
  dplyr::left_join(., type_org %>%  select(ID, V39b_lab), by = c("ID" = "ID")) %>% 
  dplyr::group_by(group, V39b_lab) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group,
                V39b_lab,
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>% 
  write_csv(., path = paste0(tbl_pth, red, "_inPPA_perc_by_V39b", ".csv"))  

# por tipo de entrevista
summ_deg %>% 
  dplyr::left_join(., entrevistados, by = c("ID" = "ID")) %>% 
 dplyr::group_by(group, status) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group,
                status,
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>%  
  write_csv(., path = paste0(tbl_pth, red, "_inPPA_perc_by_status", ".csv"))


```

Colores de los nodos representan los diferentes grupos (A2, A, B y C), el diámetro de los links representan la intensidad de la interacción (1, 2, 3, 4, 5, 6) de la pregunta R2c, la forma del vertice o nodo indica si el actor de la PPA recibe/emite inversión o por el contrario ambas, el valor de 6 (Outro - especificar) fue recodificado de tal manera que su diámetro sea el mas pequeño, esto con la intención de resaltar los links con respuestas definidas y evitar confusiones. Adicionalmente en este groupsáfico se resalta según el color de los links si la interacción se da dentro del contexto de la PPA (pregunta R2a).


\pagebreak

### Red investimento con Todas las  características (Overloaded)

```{r rinvestimento, echo=FALSE,fig.width=11, fig.height=11,warning=FALSE,strip.white=FALSE, message = FALSE, cache = TRUE}

d2 <- d %>% dplyr::mutate(start = case_when(
  R2b == "2" ~ R_Destiny_ID,
  TRUE ~ R_Start_ID 
),
end = case_when(
  R2b == "2" ~ R_Start_ID ,
  TRUE ~ R_Destiny_ID 
)) 
# duplicar e invertir las relacions recibio/aporto
dopler <- d2 %>% 
  dplyr::filter(R2b == "3") %>%
  dplyr::mutate(start =  R_Destiny_ID, 
                end = R_Start_ID) %>% 
  dplyr::select(start, end, R2c, R2a, R2b)
# adicionar filas duplicadas al edgelist
 d2 <- d2 %>% 
  bind_rows(., dopler) %>%
  dplyr::select(R_Start_ID = start, R_Destiny_ID = end, R2c, R2a, R2b)

 
  net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0)
  
overloaded_net <- net

 #save adjacencyu matrix
  as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>%
     write_csv(., path = paste0(tbl_pth, "adj_m_invst_over", ".csv")) 


## tamaño de los edges
E(net)$width <- as.numeric(E(net)$R2c)

colrs <- c("olivedrab3", "tomato", "gold", "gray40")
V(net)$color <- colrs[as.numeric(as.factor(V(net)$V1))]

## color de los edges
edge.col <- tibble(var = E(net)$R2a) %>% 
  dplyr::mutate(col = dplyr::recode(var,  "0" = "grey70", "1" =  "darkgreen",  "2" = "orange", "3" =  "red" )) %>% pull(col) 

#shape de los vertex

vtx_shp <- tibble(nodos = character(0), shp = character(0)) %>% 
  add_row(nodos = intersect(d2$R_Start_ID, d2$R_Destiny_ID), shp = "both") %>%
  add_row(nodos = setdiff(d2$R_Start_ID, d2$R_Destiny_ID), shp = "reporter") %>%
  add_row(nodos = setdiff(d2$R_Destiny_ID, d2$R_Start_ID), shp = "partner") %>%
  right_join(., tibble(vtx = V(net)$name), by = c("nodos" = "vtx") ) %>% 
  dplyr::mutate( shape = dplyr::case_when(
                   shp == "both" ~ "circle",
                   shp == "reporter" ~ "square",
                   shp == "partner" ~ "triangle"))

set.seed(123)

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

par(mar = c(0.5, 0.5, 0.5, 0.5), bg = NA)
plot(net, 
     layout=layout_with_kk, 
     edge.arrow.size=0.85, 
     rescale=T,
     edge.color= edge.col,#adjustcolor("gray50", alpha.f = .6),
     vertex.size = 6.5,
     vertex.shape = vtx_shp$shape,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.7,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black")

legend("topright" , c("Group A","Group A2", "Group B", "Group C", "SHAPE","Reporter", "Partner", "Both"), pch = c(21, 21, 21,21, 15,15, 17, 16),
       col= c("white","black", "black", "black"), pt.bg= c(colrs, "white","black", "black", "black"), pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c(as.character(1:6)), lwd = c(2:6,1)  , bty = "n", title = "R2c")

legend("bottomleft", c("In PPA", "Out PPA", "Não sei dizer", "Outro"), lty = c(1,1, 1, 1), col = c("darkgreen", "grey70", "orange", "red"), lwd = c(3,3,3,3), pt.cex=2, cex=0.8, bty="n", title = "R2a")

#calculate intensity summaries metrics

mtrs <- tibble(start = ends(net, es = E(net))[,1], 
               end = ends(net, es = E(net))[,2],
               R2c = E(net)$R2c) %>% 
 left_join(., groups, by = c("start" = "ID") ) %>% 
 left_join(., vtx_shp, by = c("start" = "nodos")) 

# add partnes to data frame
mtrs_partner <-  tibble(start = ends(net, es = E(net))[,1], 
                  end = ends(net, es = E(net))[,2],
                  R2c = E(net)$R2c) %>% 
  left_join(., groups, by = c("end" = "ID") ) %>% 
  left_join(., vtx_shp, by = c("end" = "nodos") ) %>% 
  filter(shp == "partner") 
 

mtrs %>% 
  bind_rows(mtrs_partner) %>%
  group_by(V1, R2c) %>% 
  tally() %>%
  dplyr::mutate(freq = n/sum(n), Frequency = paste0(round(freq*100,1), "%") ) %>% 
  dplyr::select(Group = V1, Intensity = R2c, Count = n, Frequency) %>% 
  ungroup() %>% 
   dplyr::mutate(Intensity  = case_when(
    Intensity  == "1" ~  "Outro - especificar",
    Intensity  == "2" ~ "Muito baixo - até R$ 100 mil",
    Intensity  == "3" ~ "Baixo - entre R$ 101 mil e R$ 250 mil",
    Intensity  == "4" ~"Médio - entre R$ 251 mil e R$ 500 mil",
    Intensity  == "5" ~"Alto - entre R$ 501 mil e R$ 1 milhão",
    Intensity  == "6" ~"Muito alto - acima de R$ 1 milhão",
    TRUE ~ "Nao identificado"
  )) %>% 
  flextable(.)


mtrs %>% 
  bind_rows(mtrs_partner) %>%
  group_by(V1, shp, R2c) %>% 
  tally() %>% 
  dplyr::mutate( freq = n/sum(n), Frequency = paste0(round(freq*100, 1), "%")) %>% 
  ungroup() %>% 
  dplyr::mutate(R2c = case_when(
    R2c == "1" ~  "Outro - especificar",
    R2c == "2" ~ "Muito baixo - até R$ 100 mil",
    R2c == "3" ~ "Baixo - entre R$ 101 mil e R$ 250 mil",
    R2c == "4" ~"Médio - entre R$ 251 mil e R$ 500 mil",
    R2c == "5" ~"Alto - entre R$ 501 mil e R$ 1 milhão",
    R2c == "6" ~"Muito alto - acima de R$ 1 milhão",
    TRUE ~ "Nao identificado"
  )) %>% 
  dplyr::filter(R2c != "Nao identificado") %>% 
  dplyr::select(Group = V1, type = shp, Intesity = R2c, Count = n, Frequency) %>% 
  flextable(.)
  


```

Colores de los nodos representan los diferentes grupos (A2, A, B y C), el diámetro de los links representan la intensidad de la interacción (1, 2, 3, 4, 5, 6) de la pregunta R2c, la forma del vertice o nodo indica si el actor de la PPA recibe/emite inversión o por el contrario ambas,el valor de 6 (Outro - especificar) fue recodificado de tal manera que su diámetro sea el mas pequeño, esto con la intención de resaltar los links con respuestas definidas y evitar confusiones.

\pagebreak

#### Degree análisis

```{r rinvestalldegSum, echo=FALSE,fig.width=11, fig.height=11,warning=FALSE,strip.white=FALSE, message = FALSE}

summ_deg <- tibble(ID      = V(net)$name ,
       type    = vtx_shp$shp,
       group   = V(net)$V1,
       in_deg  = igraph::degree(net, mode = 'in'), 
       out_deg = igraph::degree(net, mode = 'out'), 
       all     = igraph::degree(net, mode = 'total') ) %>% 
  dplyr::mutate(in_deg_frq  = round(in_deg/all,3)*100,
                out_deg_frq = round(out_deg/all,3)*100) %>% 
  dplyr::left_join(., groups %>% dplyr::select(ID, Nome) , by = ("ID" = "ID")) 
  

summ_deg %>% 
  dplyr::filter(type == "both") %>%
  dplyr::group_by(group) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_all      = sum(all)) %>%
  dplyr::mutate(in_deg_frq  = round(sum_in_deg/sum_all,3)*100,
                out_deg_frq = round(sum_out_deg/sum_all,3)*100) %>% 
  pivot_longer(cols = in_deg_frq:out_deg_frq) %>%
  ggplot(aes(x = group, y = value, fill = name))+
  geom_bar( stat = "identity")+
  geom_text(aes(label = paste0(value, "%")),
                 position = position_stack(vjust = .5), size = 7)+
  labs(x= "Group", y = "Frequency", title = "Degree Composition (Aporto/recebeu)")+
        scale_fill_discrete(name = "",  labels = c("In-degree", "Out-degree"))+
        labs(caption = "ALLIANCE BIOVERSITY CIAT - IPAM- CALPP")+
  theme(aspect.ratio = 0.6)+
  theme_light()+
  theme(legend.position="right", title = element_text(size=25),
        axis.text = element_text(size=25),
        legend.text = element_text(size=20),
        legend.title = element_text(size=25))

summ_deg %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "invest_degree_analysis_overloaded", ".csv"))   %>%
    flextable(.)
  

```


\pagebreak

### Metricas Generales Red de investimento (Direccionada/Sin loops)

```{r invsSummMetricsdir, echo=FALSE,warning=FALSE,strip.white=FALSE}

tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
       Value  = c(igraph::edge_density(net_directed, loops = FALSE),
                  igraph::centralization.betweenness(net_directed)$centralization,
                  igraph::centralization.degree (net_directed, mode = "all")$centralization,
                  igraph:: cluster_walktrap(net_directed) %>% igraph::modularity(),
                  mean(igraph::degree(net_directed, mode="all", normalized = F)),
                  igraph::transitivity(net_directed),
                  igraph::assortativity.degree(net_directed, directed = T),
                  eigen_centrality(net_directed, directed = T)$value
       )) %>%
  dplyr::mutate_if(is.numeric, round, digits = 2) %>%
  data.frame()  %T>%
   write_csv(., path = paste0(tbl_pth, "invest_gnrl_metrics_dir", ".csv"))  %>% 
flextable(.,  cwidth = 2)

         
```


### Metricas por cada Nodo (Direccionada/Sin loops)

```{r invsNodemetricsdir, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE}

metrics <- tibble(nodes_id = V(net_directed)$name) %>% 
  dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
  dplyr::select(nodes_id, Nome,V1) %>%
  dplyr::mutate(degree         = igraph::degree(net_directed, mode="all", normalized = F),
                betwe          = igraph::betweenness(net_directed) %>% round(.,1),
                closeness      = igraph::closeness(net_directed, mode="all") %>% round(.,4),
                ClusWalk       = igraph:: cluster_walktrap(net_directed) %>% membership(),
                transitivLocal = igraph::transitivity(net_directed, type = "local")  %>% round(.,2),
                Eigen_centr    = igraph::eigen_centrality(net_directed, directed = T)$vector %>%  round(.,2)
  ) %>%
  dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% 
                   clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "invest_all_metrics_dir", ".csv")) %>% 
  flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth, "investement_Dir_cluster_summary.csv")) %>% 
   flextable(.)

```

\pagebreak

### Metricas generales Red de Investimento (No direccionada/Sin loops)


```{r invsSummMetricsNOdir, echo=FALSE,warning=FALSE,strip.white=FALSE}

      tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
             Value  = c(igraph::edge_density(net_no_dir, loops = FALSE),
                        igraph::centralization.betweenness(net_no_dir)$centralization,
                        igraph::centralization.degree (net_no_dir, mode = "all")$centralization,
                        igraph:: cluster_walktrap(net_no_dir) %>% igraph::modularity(),
                        mean(igraph::degree(net_no_dir, mode="all", normalized = F)),
                        igraph::transitivity(net_no_dir),
                        igraph::assortativity.degree(net_no_dir, directed = F),
                        igraph::eigen_centrality(net_no_dir, directed = F)$value %>%  round(.,2)
                        )) %>%
        dplyr::mutate_if(is.numeric, round, digits = 2) %>%
  data.frame()  %T>%
  write_csv(., path = paste0(tbl_pth, "invest_gnr_mtr_Ndir", ".csv")) %>% 
        flextable(.,  cwidth = 2)


         
```



#### Metricas por cada Nodo (No direccionada/Sin loops)

```{r invsNodemetricsNodir, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE}

metrics <- tibble(nodes_id = V(net_no_dir)$name) %>% 
  dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
  dplyr::select(nodes_id, Nome,V1) %>%
  dplyr::mutate(degree         = igraph::degree(net_no_dir, mode="all", normalized = F),
                betwe          = igraph::betweenness(net_no_dir) %>% round(.,1),
                closeness      = igraph::closeness(net_no_dir, mode="all") %>% round(.,4),
                ClusWalk       = igraph:: cluster_walktrap(net_no_dir) %>% membership(),
                transitivLocal = igraph::transitivity(net_no_dir, type = "local")  %>% round(.,2),
                Eigen_centr    = igraph::eigen_centrality(net_no_dir, directed = F)$vector %>%  round(.,2)
  ) %>% 
  dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "invest_all_metri_Ndir", ".csv")) %>% 
  flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth, "investement_noDir_cluster_summary.csv")) %>% 
   flextable(.)

```

\pagebreak

### Metricas generales Red de Investimento (Direccionada/Con loops/Overloaded)

```{r invssummMetricsoverloaded, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE}

tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
             Value  = c(igraph::edge_density(overloaded_net, loops = FALSE),
                        igraph::centralization.betweenness(overloaded_net)$centralization,
                        igraph::centralization.degree (overloaded_net, mode = "all")$centralization,
                        igraph:: cluster_walktrap(overloaded_net) %>% igraph::modularity(),
                        mean(igraph::degree(overloaded_net, mode="all", normalized = F)),
                        igraph::transitivity(overloaded_net),
                        igraph::assortativity.degree(overloaded_net, directed = T),
                        igraph::eigen_centrality(overloaded_net, directed = T)$value %>%  round(.,2)
                        )) %>%
        dplyr::mutate_if(is.numeric, round, digits = 2) %>%
  data.frame()  %T>%
  write_csv(., path = paste0(tbl_pth, "invest_gnr_metrics_over", ".csv")) %>% 
        flextable(.,  cwidth = 2)


```

#### Metricas por cada Nodo (Direccionada/Con loops/Overloaded)

```{r invsNodemetricsoverloaded, echo=FALSE,warning=FALSE, message=F,fig.width=11, fig.height=11,strip.white=FALSE}

   metrics <- tibble(nodes_id = V(overloaded_net)$name) %>% 
      dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
      dplyr::select(nodes_id, V1) %>%
      dplyr::mutate(degree         = igraph::degree(overloaded_net, mode="all", normalized = F),
                    betwe          = igraph::betweenness(overloaded_net) %>% round(.,1),
                    closeness      = igraph::closeness(overloaded_net, mode="all") %>% round(.,4),
                    ClusWalk       = igraph:: cluster_walktrap(overloaded_net) %>% membership(),
                    transitivLocal = igraph::transitivity(overloaded_net, type = "local")  %>% round(.,2),
                    Eigen_centr    = igraph::eigen_centrality(overloaded_net, directed = T)$vector %>%  round(.,2)
                    ) %>%
   dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "invest_all_metrics_over", ".csv")) %>% 
      flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth, "investement_overloaded_cluster_summary.csv")) %>% 
   flextable(.)

```

\pagebreak

## Red de inversión más Grupo C (Direccionada)

```{r redinvestimento_grC, echo=FALSE,warning=FALSE, message = FALSE, cache = F, fig.width=15, fig.height=11, dpi =200}

red <- "invest"

nt1 <- read_excel(xls.file, sheet = "R2_investimento")

d <- nt1 %>% 
  dplyr::select( R_Start_ID,  R_Destiny_ID, R2c, R2a, R2b) %>%
  dplyr::mutate(R2c = R2c+1, R2c = if_else(R2c == 7, 1, R2c)) %>%
  dplyr::mutate_all(as.character)

d2 <- d %>% dplyr::mutate(start = case_when(
  R2b == "2" ~ R_Destiny_ID,
  TRUE ~ R_Start_ID 
),
end = case_when(
  R2b == "2" ~ R_Start_ID ,
  TRUE ~ R_Destiny_ID 
)) 
# duplicar e invertir las relacions recibio/aporto
dopler <- d2 %>% 
  dplyr::filter(R2b == "3") %>%
  dplyr::mutate(start =  R_Destiny_ID, 
                end = R_Start_ID) %>% 
  dplyr::select(start, end, R2c, R2a, R2b)
# adicionar filas duplicadas al edgelist
 d2 <- d2 %>% 
  bind_rows(., dopler) %>%
  dplyr::select(R_Start_ID = start, R_Destiny_ID = end, R2c, R2a, R2b)



nt1 <- d2 %>% 
  dplyr::select(R_Start_ID, R_Destiny_ID) %>% 
  dplyr::mutate_all(as.character)

nt2 <- read_excel(xls.file, sheet = "R5_outras_orgs") %>%
  dplyr::select(R_Start_ID, R_Destiny_ID = R5b_Destiny_ID, R5c) %>% 
  drop_na() %>% 
  mutate_all(as.character) %>% 
  dplyr::filter(R5c == "2") %>% 
  dplyr::select( -R5c)

nt_all <- bind_rows(nt1, nt2) 


 net <- graph_from_data_frame(d=  nt_all,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed= T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

 #save adjacency matrix
as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
  write_csv(., path = paste0(tbl_pth, "adj_m_invst_GrC", ".csv"))

colrs <- c("olivedrab3", "tomato", "gold", "gray40")
V(net)$color <- colrs[as.numeric(as.factor(V(net)$V1))]

#shape de los vertex

vtx_shp <- tibble(nodos = character(0), shp = character(0)) %>% 
  add_row(nodos = intersect(nt_all$R_Start_ID, nt_all$R_Destiny_ID), shp = "both") %>%
  add_row(nodos = setdiff(nt_all$R_Start_ID, nt_all$R_Destiny_ID), shp = "reporter") %>%
  add_row(nodos = setdiff(nt_all$R_Destiny_ID, nt_all$R_Start_ID), shp = "partner") %>%
  right_join(., tibble(vtx = V(net)$name), by = c("nodos" = "vtx") ) %>% 
  dplyr::mutate( shape = dplyr::case_when(
                   shp == "both" ~ "circle",
                   shp == "reporter" ~ "square",
                   shp == "partner" ~ "triangle"))

set.seed(123)

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)


par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.8, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.label.dist=0,
     vertex.shape = NULL,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     asp = 0)


legend("topright" , c("Group A","Group A2", "Group B", "Group C"), pch = c(21, 21, 21,21),
       col= c("black","black", "black", "black"), pt.bg= colrs, pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

 

  
#contar los links para cada nodo según el grupo
as_tibble(ends(net, E(net), names = T)) %>% 
  rename(start = V1, end = V2) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::select( ID_start = V1, everything()) %>% 
  dplyr::left_join(., groups, by = c("end"= "ID")) %>% 
  dplyr::select(start, end,  ID_start,ID_end = V1, everything()) %>% 
  group_by(ID_start, ID_end) %>% 
  tally() %>%
  ungroup() %>%
  dplyr::mutate(Ratio = paste(round(n/sum(n)*100,1), "%")) %>% 
  dplyr::select(Group_start = ID_start, Group_end = ID_end, Links_count = n, Ratio) %T>% 
  write_csv(.,  path = paste0(tbl_pth, paste0(red, "_node_links_count_GrC", ".csv"))) %>%
  flextable(.)

#contar total de nodos   
tibble(ID = V(net)$name) %>% 
  left_join(., groups, by = c("ID" = "ID")) %>% 
  group_by(V1) %>% 
  tally() %>% 
  dplyr::select(Group = V1, Node_counts = n) %T>% 
  write_csv(.,  path = paste0(tbl_pth, paste0(red, "invest_node_count_GrC", ".csv"))) %>%
  flextable(.)


tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
             Value  = c(igraph::edge_density(net, loops = FALSE),
                        igraph::centralization.betweenness(net)$centralization,
                        igraph::centralization.degree (net, mode = "all")$centralization,
                        igraph:: cluster_walktrap(net) %>% igraph::modularity(),
                        mean(igraph::degree(net, mode="all", normalized = F)),
                        igraph::transitivity(net),
                        igraph::assortativity.degree(net),
                        igraph::eigen_centrality(net, directed = T)$value %>%  round(.,2)
                        )) %>%
        dplyr::mutate_if(is.numeric, round, digits = 2) %>%
  data.frame()  %T>%
  write_csv(., path = paste0(tbl_pth, paste0(red, "_gnr_metrics_Grc", ".csv"))) %>% 
        flextable(.,  cwidth = 2)


 metrics <- tibble(nodes_id = V(net)$name) %>% 
      dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
      dplyr::select(nodes_id, V1) %>%
      dplyr::mutate(degree         = igraph::degree(net, mode="all", normalized = F),
                    betwe          = igraph::betweenness(net) %>% round(.,1),
                    closeness      = igraph::closeness(net, mode="all") %>% round(.,4),
                    ClusWalk       = igraph:: cluster_walktrap(net) %>% membership(),
                    transitivLocal = igraph::transitivity(net, type = "local")  %>% round(.,2),
                    Eigen_centr    = igraph::eigen_centrality(net, directed = T)$vector %>%  round(.,2)
                    ) %>%
   dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, red, "_all_GrC_metrics_over", ".csv")) %>% 
      flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth, red, "_GrC_cluster_summary.csv")) %>% 
   flextable(.)



```

\pagebreak


# Red de Cooperación técnica

```{r redcoopTec, echo=FALSE,warning=FALSE, message = FALSE, cache = TRUE}

nt1 <- read_excel(xls.file, sheet = "R3_coop_técnica") %>%
  dplyr::filter(R_Start_ID != 25 & R_Destiny_ID != 25) %>% 
  dplyr::filter(R_Start_ID != 78 & R_Destiny_ID != 75)

d <- nt1 %>% 
  dplyr::select( R_Start_ID,  R_Destiny_ID, R3a, R3d, R3c) %>%
  dplyr::mutate(R3c = R3c+1, R3c = if_else(R3c == 7, 1, R3c)) %>%
  dplyr::mutate_all(as.character)

net <- graph_from_data_frame(d=  d,
                             vertices = groups %>% dplyr::select(ID, V1),
                             directed=T)%>%
  igraph::delete.vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))



#contar egos
nt1 %>% 
  dplyr::mutate_all(as.character) %>%
  dplyr::left_join(., groups, by = c("R_Start_ID" = "ID")) %>%
  dplyr::mutate(dummy = paste0(R_Start_ID, R_Start_ID_ego)) %>% 
  dplyr::filter(!duplicated(dummy)) %>% 
  dplyr::group_by(V1, R_Start_ID_ego) %>% 
  tally() %>%
  dplyr::select(Groups = V1, Ego = R_Start_ID_ego, Ego_count = n) %>%
  ungroup() %>% 
  data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "coopTec_ego_by_gr", ".csv")) %>% 
  flextable(.)

#contar los links para cada nodo según el grupo
as_tibble(ends(net, E(net))) %>% 
  rename(start = V1, end = V2) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::select( ID_start = V1, everything()) %>% 
  dplyr::left_join(., groups, by = c("end"= "ID")) %>% 
  dplyr::select(start, end,  ID_start,ID_end = V1, everything()) %>% 
  group_by(ID_start, ID_end) %>% 
  tally() %>% 
   dplyr::select(Group_start = ID_start, Group_end = ID_end, Links_count = n) %T>% 
  write_csv(.,  path = paste0(tbl_pth, "coopTec_node_links_count", ".csv")) %>% 
  flextable(.)

```

\pagebreak


### Grupo A2

```{r rcoopgrA2, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = TRUE}

a2 <- groups %>% filter(V1 == "A2") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

net_no_dir <- net

#save adjacency matrix
  as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
     write_csv(., path = paste0(tbl_pth, "adj_m_coopTEc_Ndir", ".csv"))
  
edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "A2" ~ "tomato",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "A2 net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")

```

\pagebreak

### Grupo A

```{r rcoopgrA, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE}
#
set.seed(123)

a2 <- groups %>% filter(V1 == "A") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "A" ~ "olivedrab3",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "A net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")

```

\pagebreak

### Grupo B

```{r rcoopgrB, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE}

set.seed(123)

a2 <- groups %>% filter(V1 == "B") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "B" ~ "gold",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "B net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")


```

\pagebreak

### Entrevistados red Cooperación técnica

```{r rcoopTec_entrev, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = FALSE}

set.seed(123)

red <- "coopTec"

  net <- graph_from_data_frame(d =  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

  
#cambiar color segun status
entrev_col <- entrevistados %>% 
  dplyr::mutate(v.col = case_when(
    status == "entrevistado" ~ "gold",
    TRUE ~ "royalblue3"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray50",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = entrev_col$v.col,
     asp = 0)

legend("topleft" , c("Entrevistado","No entrevistado"), 
       pch = c(21, 21),
       col= c("gold","royalblue3"), pt.bg= c("gold", "royalblue3"), 
       pt.cex=2, cex=.8, bty = "n",  title="Status")


entrev_col %>% 
  dplyr::left_join(., groups) %>% 
  dplyr::select(Node = ID, status, Nome, Group = V1) %T>% 
   write_csv(., path = paste0(tbl_pth, "entrev_", red, ".csv")) %>% 
  flextable(.)

entrev_col %>% 
  dplyr::left_join(., groups) %>%
  dplyr::group_by(V1, status) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, status, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "entrev_", red, "_freq_byGRoup", ".csv")) %>%
  flextable(.)

```

\pagebreak

### Tipo de tipo de organização

```{r rcoopTec_tipo_org, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = FALSE}

set.seed(123)

red <- "coopTec"

  net <- graph_from_data_frame(d =  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

  
  
  color_vec <- brewer.pal(4,"Set1")

#cambiar color segun status
  vtx_col <- type_org %>% 
  dplyr::mutate(v.col = case_when(
    V39a == "1" ~ color_vec[1],
    V39a == "2" ~ color_vec[2],
    V39a == "3" ~ color_vec[3],
    V39a == "4" ~ color_vec[4],
    TRUE ~ "gray70"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

  
par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray50",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = vtx_col$v.col,
     asp = 0)

legend("topleft" , unique(vtx_col$V39a_lab) , 
       pch = c(21, 21),
       col=  unique(vtx_col$v.col), pt.bg= unique(vtx_col$v.col), 
       pt.cex=2, cex=.8, bty = "n",  title="Tipo de organização")


vtx_col %T>% 
   write_csv(., path = paste0(tbl_pth, "type_org_", red, ".csv")) %>% 
  flextable(.)

vtx_col %>% 
  dplyr::group_by(V1, V39a_lab) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, Type_V39a = V39a_lab, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "type_org_", red, "_V39a_byGRoup", ".csv")) %>%
  flextable(.)

vtx_col %>% 
  dplyr::group_by(V1, V39b_lab) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, Type_v39b = V39b_lab, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "type_org_", red, "_V39b_byGRoup", ".csv")) %>%
  flextable(.)

```

\pagebreak

### Entrevistado y Tipo de organização

```{r rcoopTec_entre_tipo_org, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = FALSE}

set.seed(123)

red <- "coopTec"

  net <- graph_from_data_frame(d =  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

  
 
 color_vec <- brewer.pal(4,"Set1")
#cambiar color segun status
  vtx_col <- type_org %>% 
  dplyr::mutate(v.col = case_when(
    V39a == "1" ~ color_vec[1],
    V39a == "2" ~ color_vec[2],
    V39a == "3" ~ color_vec[3],
    V39a == "4" ~ color_vec[4],
    TRUE ~ "gray70"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

  
  entrev_col <- entrevistados %>% 
  dplyr::mutate(v.shp = case_when(
    status == "entrevistado" ~ "circle",
    TRUE ~ "square"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

  
par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray50",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = entrev_col$v.shp,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = vtx_col$v.col,
     asp = 0)

legend("topleft" , unique(vtx_col$V39a_lab) , 
       pch = rep(21, length(unique(vtx_col$V39a_lab))),
       col=  unique(vtx_col$v.col), pt.bg= unique(vtx_col$v.col), 
       pt.cex=2, cex=.8, bty = "n",  title="Tipo de organização")

legend("bottomleft" , c("No entrevistados", "Entrevistados") , 
       pch = c(22, 21),
       col=  c("black", "black"), pt.bg= c("black", "black"), 
       pt.cex=2, cex=.8, bty = "n",  title="Status")

vtx_col %>%
  left_join(., entrev_col, by = c("ID" = "ID"),  suffix = c("", ".to_remove")) %>%
  dplyr::select(-contains("to_remove")) %>% 
  dplyr::select(Group = ID, V39a:V39b_lab, status) %T>% 
   write_csv(., path = paste0(tbl_pth, "entrev_type_org_", red, ".csv")) %>% 
  flextable(.)

vtx_col %>%
  left_join(., entrev_col, by = c("ID" = "ID"),  suffix = c("", ".to_remove")) %>%
  dplyr::select(-contains("to_remove")) %>% 
  dplyr::select(Group = ID, V39a:V39b_lab, status) %>%  
  dplyr::group_by(V1,  status, V39a_lab) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, status, Type_V39a = V39a_lab, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "entrev_type_org_", red, "_byGR", ".csv")) %>%
  flextable(.)



```


\pagebreak

### Red cooperación técnica (Tipo de nodo/Sin egos)

```{r rcoopshp, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = TRUE}
set.seed(123)
#  reordenar interaccion de acuerdo a R3d (recibio, aporto, etc...)
d2 <- d %>% dplyr::mutate(start = case_when(
  R3d == "2" ~ R_Destiny_ID,
  TRUE ~ R_Start_ID 
),
end = case_when(
  R3d == "2" ~ R_Start_ID ,
  TRUE ~ R_Destiny_ID 
)) 
# duplicar e invertir las relacions recibio/aporto
dopler <- d2 %>% 
  dplyr::filter(R3d %in% c("5", "6")) %>%
  dplyr::mutate(start =  R_Destiny_ID, 
                end = R_Start_ID) %>% 
  dplyr::select(start, end, R3c, R3a, R3d)
# adicionar filas duplicadas al edgelist
 d2 <- d2 %>% 
  bind_rows(., dopler) %>%
  dplyr::select(R_Start_ID = start, R_Destiny_ID = end, R3c, R3a, R3d)

 
  net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))
  
  net_directed <- net
  
  #save adjacency matrix
  as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
     write_csv(., path = paste0(tbl_pth, "adj_m_coopTEc_dir", ".csv"))

vtx_shp <- tibble(nodos = character(0), shp = character(0)) %>% 
  add_row(nodos = intersect(d2$R_Start_ID, d2$R_Destiny_ID), shp = "both") %>%
  add_row(nodos = setdiff(d2$R_Start_ID, d2$R_Destiny_ID), shp = "reporter") %>%
  add_row(nodos = setdiff(d2$R_Destiny_ID, d2$R_Start_ID), shp = "partner") %>%
  right_join(., tibble(vtx = V(net)$name), by = c("nodos" = "vtx") ) %>% 
  dplyr::mutate( shape = dplyr::case_when(
                   shp == "both" ~ "circle",
                   shp == "partner" ~ "triangle",
                   shp == "reporter" ~ "square"))



v.color <- tibble(V1 = V(net)$V1) %>% 
  dplyr::mutate(v.col = case_when( V1 == "A2" ~ "tomato",
                                   V1 == "A" ~  "olivedrab3",
                                   V1 == "B" ~ "gold",
                                   TRUE ~  "gray40")) %>% 
  pull(v.col)
V(net)$color <- v.color

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)
par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.8, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.label.dist=0,
     vertex.shape = vtx_shp$shape,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B", "Group 0"), 
       pch = c(21, 21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= colrs, 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "Reporter", "Partner", "Both"), col = c("black", "black", "black"), pch = c(15, 17, 16),  pt.cex=2, cex=0.8, bty="n", title = "shape")

#conteo de total de nodos por tipo
vtx_shp %>% 
  left_join(., groups, by = c("nodos" = "ID") ) %>% 
  group_by( shp) %>%
  tally() %>%
  dplyr::mutate(freq = round(n/sum(n), 2), frq = paste0(round(freq*100,1), "%")) %>% 
  dplyr::select(Type = shp, Count = n, Frequency = frq) %>% 
  data.frame() %>% 
   flextable(.)

#### conteo rol de cada empresa dentro de la PPA

jf <- d2 %>% 
  dplyr::left_join(., groups , by = c("R_Start_ID" = "ID")) %>% 
  select(-Nome, V1_St = V1) %>% 
   dplyr::left_join(., groups , by = c("R_Destiny_ID" = "ID")) %>% 
  select(-Nome, V1_end = V1) 
  
salen <- jf %>% 
  filter(R_Start_ID %in% intersect(d2$R_Start_ID, d2$R_Destiny_ID) | 
           R_Destiny_ID %in% intersect(d2$R_Start_ID, d2$R_Destiny_ID)) %>% 
  group_by( V1_St) %>%
 count(V1_St, name = "salen")

entran <- jf %>% 
  filter(R_Start_ID %in% intersect(d2$R_Start_ID, d2$R_Destiny_ID) | 
           R_Destiny_ID %in% intersect(d2$R_Start_ID, d2$R_Destiny_ID)) %>% 
  group_by(V1_end) %>% 
  count(V1_end, name = "entran") %>%
  mutate
 
left_join(salen, entran, by = c("V1_St" = "V1_end")) %>% 
  mutate(tot = sum(salen, entran, na.rm = T), 
         salen_frq = paste0(round(salen/tot*100,0), "%"),  
         entran_feq = paste0(round(entran/tot*100,0), "%")) 
  
 

  


#contar nodos dentro por R2a (In ppa and Out PPA)
vtx_shp %>% 
  left_join(., groups, by = c("nodos" = "ID") ) %>% 
  group_by( V1, shp) %>%
  tally() %>%
  dplyr::mutate(freq = round(n/sum(n), 2), frq = paste0(freq*100, "%")) %>%
  ungroup() %>% 
  reshape::rename(., c("shp" = "category", "V1" = "Group" , "n" = "Count", "freq" = "freq_rel", "frq" = "Frequency")) %>% 
  data.frame()  %T>%
   write_csv(., path = paste0(tbl_pth, "coopTec_node_by_type", ".csv")) %>%
  flextable(.)


#contar los links para cada nodo según el grupo
as_tibble(ends(net, E(net), names = T)) %>% 
  rename(start = V1, end = V2) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::select( ID_start = V1, everything()) %>% 
  dplyr::left_join(., groups, by = c("end"= "ID")) %>% 
  dplyr::select(start, end,  ID_start,ID_end = V1, everything()) %>% 
  group_by(ID_start, ID_end) %>% 
  tally() %>%
  ungroup() %>%
  dplyr::mutate(Ratio = paste(round(n/sum(n)*100,1), "%")) %>% 
   dplyr::select(Group_start = ID_start, Group_end = ID_end, Links_count = n) %T>% 
  write_csv(.,  path = paste0(tbl_pth,"coopTec_node_links_count", ".csv")) %>%
  flextable(.)

  
```

\pagebreak

```{r rcoopR3dsumm, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE}

r3d_sum <- tibble(star = ends(net_directed, es = E(net_directed))[,1], R3d = E(net_directed)$R3d) %>% 
  dplyr::mutate(R3d_lab = case_when(
    R3d == "1" ~ "Aporte",
    R3d == "2" ~ "Recebimento",
    R3d == "3" ~ "Colaboração",
    R3d == "4" ~ "Colab/aporte",
    R3d == "5" ~ "Colab/receb",
    R3d == "6" ~ "Aporte/receb",
    TRUE ~ "Outro"
  )) %>% 
  dplyr::left_join(., groups, by = c("star" = "ID")) %>% 
  dplyr::select(star,  R3d ,  R3d_lab, V1) %>% 
  dplyr::group_by(V1, R3d_lab) %>%
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n),3), frequency = paste0(freq*100, "%"))

r3d_sum %>% 
  ggplot(aes(x = V1, y = freq, fill = R3d_lab))+
  geom_bar( stat = "identity")+
  geom_text(aes(label = frequency),
                 position = position_stack(vjust = .5), size = 5)+
  labs(x= "Group", y = "Frequency", title = "R3d summary")+
        scale_fill_discrete(name = "R3d")+
        labs(caption = "ALLIANCE BIOVERSITY CIAT - IPAM- CALPP")+
  theme(aspect.ratio = 0.6)+
  theme_light()+
  theme(legend.position="right", title = element_text(size=25),
        axis.text = element_text(size=25),
        legend.text = element_text(size=20),
        legend.title = element_text(size=25))

r3d_sum %>% 
  dplyr::select(Group = V1, Label = R3d_lab, Edge.count = n , frequency) %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "coopTec_R3d_summ", ".csv"))  %>%
  flextable(., cwidth = 2)

```


##### Soporte de interpretación

A continuación se presentan un breve pero sustancial resumen sobre los Edges/links de la red de cooperación técnica basados en las opciones de respuesta de la pregunta R3d.

\pagebreak

#### Degree análisis

```{r rcoopDegSum, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE}
summ_deg <- tibble(ID = V(net)$name ,
       type    = vtx_shp$shp,
       group   = V(net)$V1,
       in_deg  = igraph::degree(net, mode = 'in'), 
       out_deg = igraph::degree(net, mode = 'out'), 
       all     = igraph::degree(net, mode = 'total') ) %>% 
  dplyr::mutate(in_deg_frq  = round(in_deg/all,3)*100,
                out_deg_frq = round(out_deg/all,3)*100) %>%
  left_join(., groups, by = c("ID" = "ID"))

summ_deg %>% 
  dplyr::filter(type == "both") %>%
  dplyr::group_by(group) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_all      = sum(all)) %>%
  dplyr::mutate(in_deg_frq  = round(sum_in_deg/sum_all,3)*100,
                out_deg_frq = round(sum_out_deg/sum_all,3)*100) %>% 
  pivot_longer(cols = in_deg_frq:out_deg_frq) %>%
  ggplot(aes(x = group, y = value, fill = name))+
  geom_bar( stat = "identity")+
  geom_text(aes(label = paste0(value, "%")),
                 position = position_stack(vjust = .5), size = 7)+
  labs(x= "Group", y = "Frequency", title = "Degree Composition (Aporto/recebeu)")+
        scale_fill_discrete(name = "",  labels = c("In-degree", "Out-degree"))+
        labs(caption = "ALLIANCE BIOVERSITY CIAT - IPAM- CALPP")+
  theme(aspect.ratio = 0.6)+
  theme_light()+
  theme(legend.position="right", title = element_text(size=25),
        axis.text = element_text(size=25),
        legend.text = element_text(size=20),
        legend.title = element_text(size=25))

  
summ_deg %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "coopTec_degree_analysis", ".csv")) %>%
  flextable(.)

```

\pagebreak

## red de cooperación técnica teniendo en cuenta a R3a

```{r rcoopINPPA, echo=FALSE,fig.width=13, fig.height=11,warning=FALSE,strip.white=FALSE}

d2 <- d %>% dplyr::mutate(start = case_when(
  R3d == "2" ~ R_Destiny_ID,
  TRUE ~ R_Start_ID 
),
end = case_when(
  R3d == "2" ~ R_Start_ID ,
  TRUE ~ R_Destiny_ID 
)) 
# duplicar e invertir las relacions recibio/aporto
dopler <- d2 %>% 
  dplyr::filter(R3d %in% c("5", "6")) %>%
  dplyr::mutate(start =  R_Destiny_ID, 
                end = R_Start_ID) %>% 
  dplyr::select(start, end, R3c, R3a, R3d)
# adicionar filas duplicadas al edgelist
 d2 <- d2 %>% 
  bind_rows(., dopler) %>%
  dplyr::select(R_Start_ID = start, R_Destiny_ID = end,  R3c, R3a, R3d)

 
  net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))
  
 
vtx_shp <- tibble(nodos = character(0), shp = character(0)) %>% 
  add_row(nodos = intersect(d2$R_Start_ID, d2$R_Destiny_ID), shp = "both") %>%
  add_row(nodos = setdiff(d2$R_Start_ID, d2$R_Destiny_ID), shp = "reporter") %>%
  add_row(nodos = setdiff(d2$R_Destiny_ID, d2$R_Start_ID), shp = "partner") %>%
  right_join(., tibble(vtx = V(net)$name), by = c("nodos" = "vtx") ) %>% 
  dplyr::mutate( shape = dplyr::case_when(
                   shp == "both" ~ "circle",
                   shp == "partner" ~ "triangle",
                   shp == "reporter" ~ "square"))

colrs <- c("olivedrab3", "tomato", "gold", "gray40")

v.color <- tibble(V1 = V(net)$V1) %>% 
  dplyr::mutate(v.col = case_when( V1 == "A2" ~ "tomato",
                                   V1 == "A" ~  "olivedrab3",
                                   V1 == "B" ~ "gold",
                                   TRUE ~  "gray40")) %>% 
  pull(v.col)

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

edge.col <- tibble(var = E(net)$R3a) %>% 
  dplyr::mutate(col = dplyr::recode(var,  "0" = "grey70", "1" =  "darkgreen",  "2" = "orange", "3" =  "red" )) %>% pull(col) 
  

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.8, 
     rescale= TRUE,
     edge.color= edge.col,
     vertex.color = v.color,
     vertex.size = 6.5,
     vertex.shape = vtx_shp$shape,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.7,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B", "Group 0", "SHAPE","Reporter", "Partner", "Both"), pch = c(21, 21, 21,21, 15,15, 17, 16),
       col= c("white","black", "black", "black"), pt.bg= c(colrs, "white","black", "black", "black"), pt.cex=2, cex=.8, bty = "n",  title="GROUPS")
legend("bottomright", c( "In PPA", "Out PPA", "Não sei dizer", "Outro"), lty = c(1,1, 1, 1), col = c("darkgreen", "grey70", "orange", "red"), lwd = c(3,3,3,3), pt.cex=2, cex=0.8, bty="n", title = "R3a")


# frecuencias por cada nodo de los tipos de edge que tiene (R3a)
summ <-  tibble(var = E(net)$R3a) %>%
  dplyr::mutate( start  = igraph::ends(net, es=E(net), names=T)[,1]) %>%
  left_join(., groups, by = c("start" = "ID"))

summ %>%
  group_by( V1, var) %>%
  tally() %>%
  dplyr::mutate(freq = round(n/sum(n),2)*100, freq = paste0(freq, "%") , var = case_when(
    var == "0" ~ "Out PPA",
    var == "1" ~ "In PPA",
    var == "3" ~ "Não sei dizer",
    TRUE ~ "Outro"
  )) %>% 
  dplyr::select(Group = V1, R3a = var, Count = n, Frequency = freq) %>%
  ungroup() %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "coopTec_R3a_summ", ".csv")) %>%
  flextable(.)

# frecuencias por cada nodo de los tipos de edge que tiene (R2a)
summ %>%
 left_join(., vtx_shp, by = c("start" = "nodos")) %>% 
  dplyr::mutate(var = case_when(
    var == "0" ~ "Out_PPA",
    var == "1" ~ "In_PPA",
    var == "3" ~ "Nao_sei_dizer",
    TRUE ~ "Outro"
  )) %>% 
  group_by(start, var) %>%
  tally() %>% 
  pivot_wider(., names_from = var, values_from = n) %>% 
  ungroup() %>% 
  mutate_all(., .funs = function(i){
    x <- ifelse(is.na(i), 0, i)
    return(x)
  }) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::mutate(Nao_sei_dizer = if("Nao_sei_dizer" %in% names(.)){Nao_sei_dizer}else{0},
                total = (In_PPA + Out_PPA + Nao_sei_dizer), 
                In_PPA_frq = round(In_PPA/total,2)*100,
                Out_PPA_frq = round(Out_PPA/total,2)*100,
                 Nao_sei_dizer_frq =  round(Nao_sei_dizer/total,2)*100) %>% 
  dplyr::select(ID = start, Nome, Group=V1, In_PPA:Nao_sei_dizer, In_PPA_frq:Nao_sei_dizer_frq) %>% 
  data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "coopTec_R3a_analysis", ".csv")) %>%
  flextable(.) %>% set_caption(., caption = "R3a summary by Node")

#Porcentaje in_ppa y out_ppa por cada grupo
red <- "coopTec"

summ_deg <- summ %>%
  dplyr::mutate(var = case_when(
    var == "0" ~ "Out PPA",
    var == "1" ~ "In PPA",
    var == "3" ~ "Não sei dizer",
    TRUE ~ "Outro"
  )) %>% 
  pivot_wider(id_cols = Nome, names_from = var, values_from = var, values_fn = list(var = length)) %>% 
  mutate_if(is.numeric, function(i){ifelse(is.na(i), 0, i)}) %>% 
  dplyr::left_join(., groups %>% select(Nome, V1, ID), by = c("Nome" = "Nome")) %>% 
  dplyr::select(ID, group = V1, Nome, in_deg = `In PPA`, out_deg = `Out PPA`, not_avaliable = Outro)

### conteos por cada empresa 

summ_deg %>% 
  dplyr::left_join(., entrevistados,  by = c("ID" = "ID")) %>% 
  dplyr::left_join(.,  type_org %>%  select(ID, V39a_lab, V39b_lab),  by = c("ID" = "ID")) %>%
  dplyr::mutate(sum_all = in_deg +out_deg+not_avaliable,
                percentage_in_ppa = paste0(round((in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((not_avaliable/sum(sum_all))*100,1),"%")
                ) %>% 
  dplyr::select(group, Nome, "count_in_ppa" = in_deg, "count_out_ppa" = out_deg, "count_not_avaliable" = not_avaliable, percentage_in_ppa:percentage_not_av, status:V39b_lab) %>%   
  write_csv(., path = paste0(tbl_pth, red,"_inPPA_percent_all", ".csv")) 

### porcentages por grupo
summ_deg %>% 
  dplyr::group_by(group) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group, 
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>% 
  write_csv(., path = paste0(tbl_pth, red,"_inPPA_percent", ".csv")) 

# por tipo de empresa v39a
summ_deg %>% 
  dplyr::left_join(., type_org %>%  select(ID, V39a_lab), by = c("ID" = "ID")) %>% 
  dplyr::group_by(group, V39a_lab) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group,
                V39a_lab,
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>% 
  write_csv(., path = paste0(tbl_pth, red,"_inPPA_perc_by_V39a", ".csv"))  

# por tipo de empresa v39b
summ_deg %>% 
  dplyr::left_join(., type_org %>%  select(ID, V39b_lab), by = c("ID" = "ID")) %>% 
  dplyr::group_by(group, V39b_lab) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group,
                V39b_lab,
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>% 
  write_csv(., path = paste0(tbl_pth, red, "_inPPA_perc_by_V39b", ".csv"))  

# por tipo de entrevista
summ_deg %>% 
  dplyr::left_join(., entrevistados, by = c("ID" = "ID")) %>% 
 dplyr::group_by(group, status) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group,
                status,
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>%  
  write_csv(., path = paste0(tbl_pth, red, "_inPPA_perc_by_status", ".csv"))





```

Colores de los nodos representan los diferentes grupos (A2, A, B y C), el diámetro de los links representan la intensidad de la interacción (1, 2, 3, 4, 5, 6) de la pregunta R3c, la forma del vertice o nodo indica si el actor de la PPA recibe/emite inversión o por el contrario ambas, el valor de 6 (Outro - especificar) fue recodificado de tal manera que su diámetro sea el mas pequeño, esto con la intención de resaltar los links con respuestas definidas y evitar confusiones. Adicionalmente en este groupsáfico se resalta según el color de los links si la interacción se da dentro del contexto de la PPA (pregunta R3a).


\pagebreak


### Red cooperación técnica con Todas las  características (Overloaded)

```{r rcoop, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, message = FALSE, cache = TRUE}

d2 <- d %>% dplyr::mutate(start = case_when(
  R3d == "2" ~ R_Destiny_ID,
  TRUE ~ R_Start_ID 
),
end = case_when(
  R3d == "2" ~ R_Start_ID ,
  TRUE ~ R_Destiny_ID 
)) 
# duplicar e invertir las relacions recibio/aporto
dopler <- d2 %>% 
  dplyr::filter(R3d %in% c("5", "6")) %>%
  dplyr::mutate(start =  R_Destiny_ID, 
                end = R_Start_ID) %>% 
  dplyr::select(start, end, R3c, R3a, R3d)
# adicionar filas duplicadas al edgelist
 d2 <- d2 %>% 
  bind_rows(., dopler) %>%
  dplyr::select(R_Start_ID = start, R_Destiny_ID = end, R3c, R3a, R3d)

 
  net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0)
  
overloaded_net <- net

#save adjacency matrix
  as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
    write_csv(., path = paste0(tbl_pth, "adj_m_coopTEc_over", ".csv"))

## tamaño de los edges
E(net)$width <- as.numeric(E(net)$R3c)
  
  
colrs <- c("olivedrab3", "tomato", "gold", "gray40")
v.color <- tibble(V1 = V(net)$V1) %>% 
                  dplyr::mutate(v.col = case_when( V1 == "A2" ~ "tomato",
                                                   V1 == "A" ~  "olivedrab3",
                                                   V1 == "B" ~ "gold",
                                                   TRUE ~  "gray40")) %>%  pull(v.col)


V(net)$color <- v.color

set.seed(123)

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

par(mar = c(0.5, 0.5, 0.5, 0.5))
plot(net, 
     layout=layout_with_kk, 
     edge.arrow.size=0.85, 
     rescale=T,
     edge.color=adjustcolor("gray50", alpha.f = .6),
     vertex.size = 6.5,
     vertex.shape = vtx_shp$shape,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.7,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black")

legend("topright" , c("Group A","Group A2", "Group B", "Group C", "SHAPE","Reporter", "Partner", "Both"), pch = c(21, 21, 21,21, 15,15, 17, 16),
       col= c("white","black", "black", "black"), pt.bg= c(colrs, "white","black", "black", "black"), pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c(as.character(1:6)), lwd = c(2:6,1)  , bty = "n", title = "R3c")

#calculate intensity summaries metrics

mtrs <- tibble(start = ends(net, es = E(net))[,1], 
               end = ends(net, es = E(net))[,2],
               R3c = E(net)$R3c) %>% 
 left_join(., groups, by = c("start" = "ID") ) %>% 
 left_join(., vtx_shp, by = c("start" = "nodos")) 

# add partnes to data frame
mtrs_partner <-  tibble(start = ends(net, es = E(net))[,1], 
                  end = ends(net, es = E(net))[,2],
                  R3c = E(net)$R3c) %>% 
  left_join(., groups, by = c("end" = "ID") ) %>% 
  left_join(., vtx_shp, by = c("end" = "nodos") ) %>% 
  filter(shp == "partner") 
 

mtrs %>% 
  bind_rows(mtrs_partner) %>%
  group_by(V1, R3c) %>% 
  tally() %>%
  dplyr::mutate(freq = n/sum(n), Frequency = paste0(round(freq*100,1), "%") ) %>% 
  dplyr::select(Group = V1, Intensity = R3c, Count = n, Frequency) %>% 
  ungroup() %>% 
   dplyr::mutate(Intensity  = case_when(
    Intensity  == "1" ~  "Outro - especificar",
    Intensity  == "2" ~ "Muito baixo - até R$ 100 mil",
    Intensity  == "3" ~ "Baixo - entre R$ 101 mil e R$ 250 mil",
    Intensity  == "4" ~"Médio - entre R$ 251 mil e R$ 500 mil",
    Intensity  == "5" ~"Alto - entre R$ 501 mil e R$ 1 milhão",
    Intensity  == "6" ~"Muito alto - acima de R$ 1 milhão",
    TRUE ~ "Nao identificado"
  )) %>% 
  flextable(.)


mtrs %>% 
  bind_rows(mtrs_partner) %>%
  group_by(V1, shp, R3c) %>% 
  tally() %>% 
  dplyr::mutate( freq = n/sum(n), Frequency = paste0(round(freq*100, 1), "%")) %>% 
  ungroup() %>% 
  dplyr::mutate(R3c = case_when(
    R3c == "1" ~  "Outro - especificar",
    R3c == "2" ~ "Muito baixo - até R$ 100 mil",
    R3c == "3" ~ "Baixo - entre R$ 101 mil e R$ 250 mil",
    R3c == "4" ~"Médio - entre R$ 251 mil e R$ 500 mil",
    R3c == "5" ~"Alto - entre R$ 501 mil e R$ 1 milhão",
    R3c == "6" ~"Muito alto - acima de R$ 1 milhão",
    TRUE ~ "Nao identificado"
  )) %>% 
  dplyr::filter(R3c != "Nao identificado") %>% 
  dplyr::select(Group = V1, type = shp, Intesity = R3c, Count = n, Frequency) %>% 
  flextable(.)
  




```

Colores de los nodos representan los diferentes grupos (A2, A, B y C), el diámetro de los links representan la intensidad de la interacción (1, 2, 3, 4, 5, 6) de la pregunta R3c, la forma del vertice o nodo indica si el actor de la PPA recibe/emite inversión o por el contrario ambas,el valor de 6 (Outro - especificar) fue recodificado de tal manera que su diámetro sea el mas pequeño, esto con la intención de resaltar los links con respuestas definidas y evitar confusiones.

\pagebreak


### Metricas Generales Red de cooperación técnica (Direccionada)

```{r rcoopSummMetricsdir, echo=FALSE,warning=FALSE,strip.white=FALSE}

tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
       Value  = c(igraph::edge_density(net_directed, loops = FALSE),
                  igraph::centralization.betweenness(net_directed)$centralization,
                  igraph::centralization.degree (net_directed, mode = "all")$centralization,
                  igraph:: cluster_walktrap(net_directed) %>% igraph::modularity(),
                  mean(igraph::degree(net_directed, mode="all", normalized = F)),
                  igraph::transitivity(net_directed),
                  igraph::assortativity.degree(net_directed, directed = T),
                  igraph::eigen_centrality(net_directed, directed = T)$value %>%  round(.,2)
       )) %>%
  dplyr::mutate_if(is.numeric, round, digits = 2) %>%
  data.frame()  %T>%
  write_csv(., path = paste0(tbl_pth, "coopTec_gnr_mtr_Dir", ".csv")) %>%
  flextable(.,  cwidth = 2)

         
```

#### Metricas por cada Nodo (Direccionada)

```{r rcoopNodemetricsdir, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE}

metrics <- tibble(nodes_id = V(net_directed)$name) %>% 
  dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
  dplyr::select(nodes_id, Nome, V1) %>%
  dplyr::mutate(degree         = igraph::degree(net_directed, mode="all", normalized = F),
                betwe          = igraph::betweenness(net_directed) %>% round(.,1),
                closeness      = igraph::closeness(net_directed, mode="all") %>% round(.,4),
                ClusWalk       = igraph:: cluster_walktrap(net_directed) %>% membership(),
                transitivLocal = igraph::transitivity(net_directed, type = "local")  %>% round(.,2),
                Eigen_centr    = igraph::eigen_centrality(net_directed, directed = T)$vector %>%  round(.,2)
                
  ) %>%
   dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T))%>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "coopTec_all_mtric_Dir", ".csv")) %>%
  flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth, "coopTec_Dir_cluster_summary.csv")) %>% 
   flextable(.)

```

\pagebreak

### Metricas generales Red de Cooperación técnica (No direccionada)


```{r rcoopSummMetricsNOdir, echo=FALSE,warning=FALSE,strip.white=FALSE}

tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
       Value  = c(igraph::edge_density(net_no_dir, loops = FALSE),
                  igraph::centralization.betweenness(net_no_dir)$centralization,
                  igraph::centralization.degree (net_no_dir, mode = "all")$centralization,
                  igraph:: cluster_walktrap(net_no_dir) %>% igraph::modularity(),
                  mean(igraph::degree(net_no_dir, mode="all", normalized = F)),
                  igraph::transitivity(net_no_dir),
                  igraph::assortativity.degree(net_no_dir, directed = T),
                  igraph::eigen_centrality(net_no_dir, directed = F)$value %>%  round(.,2)
       )) %>%
  
  dplyr::mutate_if(is.numeric, round, digits = 2) %>%
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "coopTec_gnr_mtric_Ndir", ".csv")) %>%
  flextable(.,  cwidth = 2)

         
```


#### Metricas por cada Nodo (No direccionada)

```{r rcoopNodemetricsNodir, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE}

metrics <- tibble(nodes_id = V(net_no_dir)$name) %>% 
  dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
  dplyr::select(nodes_id, Nome, V1) %>%
  dplyr::mutate(degree         = igraph::degree(net_no_dir, mode="all", normalized = F),
                betwe          = igraph::betweenness(net_no_dir) %>% round(.,1),
                closeness      = igraph::closeness(net_no_dir, mode="all") %>% round(.,4),
                ClusWalk       = igraph:: cluster_walktrap(net_no_dir) %>% membership(),
                transitivLocal = igraph::transitivity(net_no_dir, type = "local")  %>% round(.,2),
                Eigen_centr    = igraph::eigen_centrality(net_no_dir, directed = F)$vector %>%  round(.,2)
  ) %>%
   dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T))%>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

  metrics %>% 
    data.frame()  %T>% 
    write_csv(., path = paste0(tbl_pth, "coopTec_all_mtric_Ndir", ".csv")) %>%
  flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth, "coopTec_NoDir_cluster_summary.csv")) %>% 
   flextable(.)

```

\pagebreak
### Metricas generales Red de cooperación técnica (Direccionada/Con loops/Overloaded)

```{r icoopsummMetricsoverloaded, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE}

tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
       Value  = c(igraph::edge_density(overloaded_net, loops = FALSE),
                  igraph::centralization.betweenness(overloaded_net)$centralization,
                  igraph::centralization.degree (overloaded_net, mode = "all")$centralization,
                  igraph:: cluster_walktrap(overloaded_net) %>% igraph::modularity(),
                  mean(igraph::degree(overloaded_net, mode="all", normalized = F)),
                  igraph::transitivity(overloaded_net),
                  igraph::assortativity.degree(overloaded_net, directed = T),
                  igraph::eigen_centrality(overloaded_net, directed = T)$value %>%  round(.,2)
       )) %>%
  dplyr::mutate_if(is.numeric, round, digits = 2) %>%
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "coopTec_gnr_mtric_over", ".csv")) %>%
  flextable(.,  cwidth = 2)


```

#### Metricas por cada Nodo (Direccionada/Con loops/Overloaded)

```{r icoopNodemetricsoverloaded, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE}

metrics <- tibble(nodes_id = V(overloaded_net)$name) %>% 
  dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
  dplyr::select(nodes_id,Nome, V1) %>%
  dplyr::mutate(degree         = igraph::degree(overloaded_net, mode="all", normalized = F),
                betwe          = igraph::betweenness(overloaded_net) %>% round(.,1),
                closeness      = igraph::closeness(overloaded_net, mode="all") %>% round(.,4),
                ClusWalk       = igraph:: cluster_walktrap(overloaded_net) %>% membership(),
                transitivLocal = igraph::transitivity(overloaded_net, type = "local")  %>% round(.,2),
                Eigen_centr    = igraph::eigen_centrality(net_no_dir, directed = F)$vector %>%  round(.,2)
  ) %>%
   dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "coopTec_all_mtric_over", ".csv"))%>%
  flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth, "coopTec_overloaded_cluster_summary.csv")) %>% 
   flextable(.)

```

\pagebreak

## Red de Cooperación técnica más Grupo C (Direccionada)

```{r redcoopTec_grC, echo=FALSE,warning=FALSE, message = FALSE, cache = F, fig.width=15, fig.height=11, dpi =200}

red <- "coopTec"

d2 <- d %>% dplyr::mutate(start = case_when(
  R3d == "2" ~ R_Destiny_ID,
  TRUE ~ R_Start_ID 
),
end = case_when(
  R3d == "2" ~ R_Start_ID ,
  TRUE ~ R_Destiny_ID 
)) 
# duplicar e invertir las relacions recibio/aporto
dopler <- d2 %>% 
  dplyr::filter(R3d == "3") %>%
  dplyr::mutate(start =  R_Destiny_ID, 
                end = R_Start_ID) %>% 
  dplyr::select(start, end)
# adicionar filas duplicadas al edgelist
 d2 <- d2 %>% 
  bind_rows(., dopler) %>%
  dplyr::select(R_Start_ID = start, R_Destiny_ID = end)


nt1 <- d2 %>% 
  dplyr::select(R_Start_ID, R_Destiny_ID) %>% 
  dplyr::mutate_all(as.character)

nt2 <- read_excel(xls.file, sheet = "R5_outras_orgs") %>%
  dplyr::select(R_Start_ID, R_Destiny_ID = R5b_Destiny_ID, R5c) %>% 
  drop_na() %>% 
  mutate_all(as.character) %>% 
  dplyr::filter(R5c == "3") %>% 
  dplyr::select( -R5c)

nt_all <- bind_rows(nt1, nt2) 


 net <- graph_from_data_frame(d=  nt_all,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed= T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

 #save adjacency matrix
as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
  write_csv(., path = paste0(tbl_pth, "adj_m_coopTec_GrC", ".csv"))

colrs <- c("olivedrab3", "tomato", "gold", "gray40")
V(net)$color <- colrs[as.numeric(as.factor(V(net)$V1))]

#shape de los vertex

vtx_shp <- tibble(nodos = character(0), shp = character(0)) %>% 
  add_row(nodos = intersect(nt_all$R_Start_ID, nt_all$R_Destiny_ID), shp = "both") %>%
  add_row(nodos = setdiff(nt_all$R_Start_ID, nt_all$R_Destiny_ID), shp = "reporter") %>%
  add_row(nodos = setdiff(nt_all$R_Destiny_ID, nt_all$R_Start_ID), shp = "partner") %>%
  right_join(., tibble(vtx = V(net)$name), by = c("nodos" = "vtx") ) %>% 
  dplyr::mutate( shape = dplyr::case_when(
                   shp == "both" ~ "circle",
                   shp == "partner" ~ "square",
                   shp == "reporter" ~ "triangle"))

set.seed(123)

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)


par(bg = NA)
plot(net, 
     layout= layout_with_fr, 
     edge.arrow.size=0.8, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.label.dist=0,
     vertex.shape = NULL,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     asp = 0)


legend("topright" , c("Group A","Group A2", "Group B", "Group C"), pch = c(21, 21, 21,21),
       col= c("black","black", "black", "black"), pt.bg= colrs, pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

 

  
#contar los links para cada nodo según el grupo
as_tibble(ends(net, E(net), names = T)) %>% 
  rename(start = V1, end = V2) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::select( ID_start = V1, everything()) %>% 
  dplyr::left_join(., groups, by = c("end"= "ID")) %>% 
  dplyr::select(start, end,  ID_start,ID_end = V1, everything()) %>% 
  group_by(ID_start, ID_end) %>% 
  tally() %>%
  ungroup() %>%
  dplyr::mutate(Ratio = paste(round(n/sum(n)*100,1), "%")) %>% 
  dplyr::select(Group_start = ID_start, Group_end = ID_end, Links_count = n, Ratio) %>% 
  write_csv(.,  path = paste0(tbl_pth, paste0(red, "_node_links_count_GrC", ".csv"))) %T>%
  flextable(.)

#contar total de nodos   
tibble(ID = V(net)$name) %>% 
  left_join(., groups, by = c("ID" = "ID")) %>% 
  group_by(V1) %>% 
  tally() %>% 
  dplyr::select(Group = V1, Node_counts = n) %>% 
  write_csv(.,  path = paste0(tbl_pth, paste0(red, "_node_count_GrC", ".csv"))) %T>%
  flextable(.)


tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
             Value  = c(igraph::edge_density(net, loops = FALSE),
                        igraph::centralization.betweenness(net)$centralization,
                        igraph::centralization.degree (net, mode = "all")$centralization,
                        igraph:: cluster_walktrap(net) %>% igraph::modularity(),
                        mean(igraph::degree(net, mode="all", normalized = F)),
                        igraph::transitivity(net),
                        igraph::assortativity.degree(net),
                        igraph::eigen_centrality(net, directed = T)$value %>%  round(.,2)
                        )) %>%
        dplyr::mutate_if(is.numeric, round, digits = 2) %>%
  data.frame()  %T>%
  write_csv(., path = paste0(tbl_pth, paste0(red, "_gnr_metrics_Grc", ".csv"))) %>% 
        flextable(.,  cwidth = 2)


 metrics <- tibble(nodes_id = V(net)$name) %>% 
      dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
      dplyr::select(nodes_id, V1) %>%
      dplyr::mutate(degree         = igraph::degree(net, mode="all", normalized = F),
                    betwe          = igraph::betweenness(net) %>% round(.,1),
                    closeness      = igraph::closeness(net, mode="all") %>% round(.,4),
                    ClusWalk       = igraph:: cluster_walktrap(net) %>% membership(),
                    transitivLocal = igraph::transitivity(net, type = "local")  %>% round(.,2),
                    Eigen_centr    = igraph::eigen_centrality(net, directed = T)$vector %>%  round(.,2)
                    ) %>%
   dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, red, "_all_GrC_metrics_over", ".csv")) %>% 
      flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth, red, "_GrC_cluster_summary.csv")) %>% 
   flextable(.)



```


\pagebreak


# Red de Negocios

```{r rednego, echo=FALSE,warning=FALSE, message = FALSE, cache = TRUE}

nt1 <- read_excel(xls.file, sheet = "R1_negocios") %>%
  dplyr::filter(R_Start_ID != 25 & R_Destiny_ID != 25) %>% 
  dplyr::filter(R_Start_ID != 75 & R_Destiny_ID != 75)

d <- nt1 %>% 
  dplyr::select( R_Start_ID,  R_Destiny_ID, R1a, R1b) %>%
  dplyr::mutate(R1b = R1b+1, R1b = if_else(R1b == 7, 1, R1b)) %>%
  dplyr::mutate_all(as.character)

net <- graph_from_data_frame(d=  d,
                             vertices = groups %>% dplyr::select(ID, V1),
                             directed=T)%>%
                      igraph::delete.vertices(., igraph::degree(.) == 0)%>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

#contar egos
nt1 %>% 
  dplyr::mutate_all(as.character) %>%
  dplyr::left_join(., groups, by = c("R_Start_ID" = "ID")) %>%
  dplyr::mutate(dummy = paste0(R_Start_ID, R_Start_ID_ego)) %>% 
  dplyr::filter(!duplicated(dummy)) %>% 
  dplyr::group_by(V1, R_Start_ID_ego) %>% 
  tally() %>%
  dplyr::select(Groups = V1, Ego = R_Start_ID_ego, Ego_count = n) %>%
  ungroup() %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "nego_ego_summary", ".csv")) %>%
  flextable(.)

#Contar los links por cada grupo
as_tibble(ends(net, E(net), names = T)) %>% 
  rename(start = V1, end = V2) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::select( ID_start = V1, everything()) %>% 
  dplyr::left_join(., groups, by = c("end"= "ID")) %>% 
  dplyr::select(start, end,  ID_start,ID_end = V1, everything()) %>% 
  group_by(ID_start, ID_end) %>% 
  tally() %>%
   dplyr::select(Group_start = ID_start, Group_end = ID_end, Links_count = n) %T>% 
  write_csv(.,  path = paste0(tbl_pth, "nego_node_links_count", ".csv")) %>% 
  flextable(.)

```

### Grupo A2

```{r rnegogrA2, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = TRUE}

a2 <- groups %>% filter(V1 == "A2") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

net_no_dir <- net

#save adjacency matrix
  as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
    write_csv(., path = paste0(tbl_pth, "adj_m_nego_Nodir", ".csv"))

edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "A2" ~ "tomato",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "A2 net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")

```

\pagebreak

### Grupo A

```{r rnegogrA, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE}
#
set.seed(123)

a2 <- groups %>% filter(V1 == "A") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "A" ~ "olivedrab3",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "A net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")

```

\pagebreak

### Grupo B

```{r rnegogrB, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE}

set.seed(123)

a2 <- groups %>% filter(V1 == "B") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "B" ~ "gold",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "B net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")


```

\pagebreak

### Entrevistados red Negocios

```{r rnegoentrev, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = FALSE}

set.seed(123)

red <- "nego"

  net <- graph_from_data_frame(d =  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

  
#cambiar color segun status
entrev_col <- entrevistados %>% 
  dplyr::mutate(v.col = case_when(
    status == "entrevistado" ~ "gold",
    TRUE ~ "royalblue3"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0, 
     rescale=T,
     edge.color= "gray50",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = entrev_col$v.col,
     asp = 0)

legend("topleft" , c("Entrevistado","No entrevistado"), 
       pch = c(21, 21),
       col= c("gold","royalblue3"), pt.bg= c("gold", "royalblue3"), 
       pt.cex=2, cex=.8, bty = "n",  title="Status")


entrev_col %>% 
  dplyr::left_join(., groups) %>% 
  dplyr::select(Node = ID, status, Nome, Group = V1) %T>% 
   write_csv(., path = paste0(tbl_pth, "entrev_", red, ".csv")) %>% 
  flextable(.)

entrev_col %>% 
  dplyr::left_join(., groups) %>% 
  dplyr::group_by(V1, status) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, status, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "entrev_", red, "_freq_byGRoup", ".csv")) %>%
  flextable(.)

```

\pagebreak

### Tipo de tipo de organização

```{r rnego_tipo_org, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = FALSE}

set.seed(123)

red <- "nego"

  net <- graph_from_data_frame(d =  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

  
  
  color_vec <- brewer.pal(4,"Set1")

#cambiar color segun status
  vtx_col <- type_org %>% 
  dplyr::mutate(v.col = case_when(
    V39a == "1" ~ color_vec[1],
    V39a == "2" ~ color_vec[2],
    V39a == "3" ~ color_vec[3],
    V39a == "4" ~ color_vec[4],
    TRUE ~ "gray70"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

  
par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray50",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = vtx_col$v.col,
     asp = 0)

legend("topleft" , unique(vtx_col$V39a_lab) , 
       pch = c(21, 21),
       col=  unique(vtx_col$v.col), pt.bg= unique(vtx_col$v.col), 
       pt.cex=2, cex=.8, bty = "n",  title="Tipo de organização")


vtx_col %T>% 
   write_csv(., path = paste0(tbl_pth, "type_org_", red, ".csv")) %>% 
  flextable(.)

vtx_col %>% 
  dplyr::group_by(V1, V39a_lab) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, Type_V39a = V39a_lab, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "type_org_", red, "_V39a_byGRoup", ".csv")) %>%
  flextable(.)

vtx_col %>% 
  dplyr::group_by(V1, V39b_lab) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, Type_v39b = V39b_lab, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "type_org_", red, "_V39b_byGRoup", ".csv")) %>%
  flextable(.)

```

\pagebreak

### Entrevistado y Tipo de organização

```{r rnego_entre_tipo_org, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = FALSE}

set.seed(123)

red <- "nego"

  net <- graph_from_data_frame(d =  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

  
 
 color_vec <- brewer.pal(4,"Set1")
#cambiar color segun status
  vtx_col <- type_org %>% 
  dplyr::mutate(v.col = case_when(
    V39a == "1" ~ color_vec[1],
    V39a == "2" ~ color_vec[2],
    V39a == "3" ~ color_vec[3],
    V39a == "4" ~ color_vec[4],
    TRUE ~ "gray70"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

  
  entrev_col <- entrevistados %>% 
  dplyr::mutate(v.shp = case_when(
    status == "entrevistado" ~ "circle",
    TRUE ~ "square"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

  
par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray50",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = entrev_col$v.shp,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = vtx_col$v.col,
     asp = 0)

legend("topleft" , unique(vtx_col$V39a_lab) , 
       pch = rep(21, length(unique(vtx_col$V39a_lab))),
       col=  unique(vtx_col$v.col), pt.bg= unique(vtx_col$v.col), 
       pt.cex=2, cex=.8, bty = "n",  title="Tipo de organização")

legend("bottomleft" , c("No entrevistados", "Entrevistados") , 
       pch = c(22, 21),
       col=  c("black", "black"), pt.bg= c("black", "black"), 
       pt.cex=2, cex=.8, bty = "n",  title="Status")

vtx_col %>%
  left_join(., entrev_col, by = c("ID" = "ID"),  suffix = c("", ".to_remove")) %>%
  dplyr::select(-contains("to_remove")) %>% 
  dplyr::select(Group = ID, V39a:V39b_lab, status) %T>% 
   write_csv(., path = paste0(tbl_pth, "entrev_type_org_", red, ".csv")) %>% 
  flextable(.)

vtx_col %>%
  left_join(., entrev_col, by = c("ID" = "ID"),  suffix = c("", ".to_remove")) %>%
  dplyr::select(-contains("to_remove")) %>% 
  dplyr::select(Group = ID, V39a:V39b_lab, status) %>%  
  dplyr::group_by(V1,  status, V39a_lab) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, status, Type_V39a = V39a_lab, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "entrev_type_org_", red, "_byGR", ".csv")) %>%
  flextable(.)



```



\pagebreak

## red de Negocios teniendo en cuenta a R1a

```{r rnegoINPPA, echo=FALSE,fig.width=13, fig.height=11,warning=FALSE,strip.white=FALSE}

  net <- graph_from_data_frame(d=  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed= T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))


colrs <- c("olivedrab3", "tomato", "gold", "gray40")

v.color <- tibble(V1 = V(net)$V1) %>% 
  dplyr::mutate(v.col = case_when( V1 == "A2" ~ "tomato",
                                   V1 == "A" ~  "olivedrab3",
                                   V1 == "B" ~ "gold",
                                   TRUE ~  "gray40")) %>% 
  pull(v.col)

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

edge.col <- tibble(var = E(net)$R1a) %>% 
  dplyr::mutate(col = dplyr::recode(var,  "0" = "grey70", "1" =  "darkgreen",  "2" = "orange", "3" =  "red" )) %>% pull(col) 
  

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0, 
     rescale= TRUE,
     edge.color= edge.col,
     vertex.color = v.color,
     vertex.size = 6.5,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.7,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B", "Group C"), pch = c(21, 21, 21,21),
       col= c("white","black", "black", "black"), pt.bg= c(colrs, "white","black", "black", "black"), pt.cex=2, cex=.8, bty = "n",  title="GROUPS")
legend("bottomright", c( "In PPA", "Out PPA", "Não sei dizer", "Outro"), lty = c(1,1, 1, 1), col = c("darkgreen", "grey70", "orange", "red"), lwd = c(3,3,3,3), pt.cex=2, cex=0.8, bty="n", title = "R1a")


# frecuencias por cada nodo de los tipos de edge que tiene (R3a)
summ <-  tibble(var = E(net)$R1a) %>%
  dplyr::mutate( start  = igraph::ends(net, es=E(net), names=T)[,1]) %>%
  left_join(., groups, by = c("start" = "ID"))

summ %>%
  group_by( V1, var) %>%
  tally() %>%
  dplyr::mutate(freq = round(n/sum(n),2)*100, freq = paste0(freq, "%") , var = case_when(
    var == "0" ~ "Out PPA",
    var == "1" ~ "In PPA",
    var == "3" ~ "Não sei dizer",
    TRUE ~ "Outro"
  )) %>% 
  dplyr::select(Group = V1, R1a = var, Count = n, Frequency = freq) %>%
   data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "nego_R1a_summ", ".csv")) %>%
  flextable(.)

# frecuencias por cada nodo de los tipos de edge que tiene (R2a)
summ %>%  
  dplyr::mutate(var = case_when(
    var == "0" ~ "Out_PPA",
    var == "1" ~ "In_PPA",
    var == "3" ~ "Nao_sei_dizer",
    TRUE ~ "Outro"
  )) %>% 
  group_by(start, var) %>%
  tally() %>% 
  pivot_wider(., names_from = var, values_from = n) %>% 
  ungroup() %>% 
  mutate_all(., .funs = function(i){
    x <- ifelse(is.na(i), 0, i)
    return(x)
  }) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::mutate(Nao_sei_dizer = if("Nao_sei_dizer" %in% names(.)){Nao_sei_dizer}else{0},
                total = (In_PPA + Out_PPA + Nao_sei_dizer), 
                In_PPA_frq = round(In_PPA/total,2)*100,
                Out_PPA_frq = round(Out_PPA/total,2)*100,
                 Nao_sei_dizer_frq =  round(Nao_sei_dizer/total,2)*100) %>% 
  dplyr::select(ID = start, Group=V1, Nome, In_PPA:Nao_sei_dizer, In_PPA_frq:Nao_sei_dizer_frq) %>% 
   data.frame()  %T>%
   write_csv(., path = paste0(tbl_pth, "nego_R1a_by_node", ".csv")) %>%
  flextable(.) %>% set_caption(., caption = "R3a summary by Node")

 #Porcentaje in_ppa y out_ppa por cada grupo
red <- "nego"

summ_deg <- summ %>%
  dplyr::mutate(var = case_when(
    var == "0" ~ "Out PPA",
    var == "1" ~ "In PPA",
    var == "3" ~ "Não sei dizer",
    TRUE ~ "Outro"
  )) %>% 
  pivot_wider(id_cols = Nome, names_from = var, values_from = var, values_fn = list(var = length)) %>% 
  mutate_if(is.numeric, function(i){ifelse(is.na(i), 0, i)}) %>% 
  dplyr::mutate(Outro = 0) %>% 
  dplyr::left_join(., groups %>% select(Nome, V1, ID), by = c("Nome" = "Nome")) %>% 
  dplyr::select(ID, group = V1, Nome, in_deg = `In PPA`, out_deg = `Out PPA`, not_avaliable = Outro)

### conteos por cada empresa 

summ_deg %>% 
  dplyr::left_join(., entrevistados,  by = c("ID" = "ID")) %>% 
  dplyr::left_join(.,  type_org %>%  select(ID, V39a_lab, V39b_lab),  by = c("ID" = "ID")) %>%
  dplyr::mutate(sum_all = in_deg +out_deg+not_avaliable,
                percentage_in_ppa = paste0(round((in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((not_avaliable/sum(sum_all))*100,1),"%")
                ) %>% 
  dplyr::select(group, Nome, "count_in_ppa" = in_deg, "count_out_ppa" = out_deg, "count_not_avaliable" = not_avaliable, percentage_in_ppa:percentage_not_av, status:V39b_lab) %>%   
  write_csv(., path = paste0(tbl_pth, red,"_inPPA_percent_all", ".csv")) 

### porcentages por grupo
summ_deg %>% 
  dplyr::group_by(group) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group, 
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>% 
  write_csv(., path = paste0(tbl_pth, red,"_inPPA_percent", ".csv")) 

# por tipo de empresa v39a
summ_deg %>% 
  dplyr::left_join(., type_org %>%  select(ID, V39a_lab), by = c("ID" = "ID")) %>% 
  dplyr::group_by(group, V39a_lab) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group,
                V39a_lab,
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>% 
  write_csv(., path = paste0(tbl_pth, red,"_inPPA_perc_by_V39a", ".csv"))  

# por tipo de empresa v39b
summ_deg %>% 
  dplyr::left_join(., type_org %>%  select(ID, V39b_lab), by = c("ID" = "ID")) %>% 
  dplyr::group_by(group, V39b_lab) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group,
                V39b_lab,
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>% 
  write_csv(., path = paste0(tbl_pth, red, "_inPPA_perc_by_V39b", ".csv"))  

# por tipo de entrevista
summ_deg %>% 
  dplyr::left_join(., entrevistados, by = c("ID" = "ID")) %>% 
 dplyr::group_by(group, status) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group,
                status,
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>%  
  write_csv(., path = paste0(tbl_pth, red, "_inPPA_perc_by_status", ".csv"))


```

Colores de los nodos representan los diferentes grupos (A2, A, B y C), el diámetro de los links representan la intensidad de la interacción (1, 2, 3, 4, 5, 6) de la pregunta R3c, la forma del vertice o nodo indica si el actor de la PPA recibe/emite inversión o por el contrario ambas, el valor de 6 (Outro - especificar) fue recodificado de tal manera que su diámetro sea el mas pequeño, esto con la intención de resaltar los links con respuestas definidas y evitar confusiones. Adicionalmente en este groupsáfico se resalta según el color de los links si la interacción se da dentro del contexto de la PPA (pregunta R3a).

\pagebreak


### Red de Negocios con Todas las  características (Overloaded)

```{r rnegooverloaded, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, message = FALSE, cache = TRUE}


  net <- graph_from_data_frame(d=  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0)
  
overloaded_net <- net

#save adjacency matrix
  as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>%
     write_csv(., path = paste0(tbl_pth, "adj_m_nego_over", ".csv"))

## tamaño de los edges
E(net)$width <- tibble (width = as.numeric(E(net)$R1b)+1) %>% dplyr::mutate(width = if_else(width == 7,  1, width)) %>% pull(width)
  
  
colrs <- c("olivedrab3", "tomato", "gold", "gray40")
v.color <- tibble(V1 = V(net)$V1) %>% 
                  dplyr::mutate(v.col = case_when( V1 == "A2" ~ "tomato",
                                                   V1 == "A" ~  "olivedrab3",
                                                   V1 == "B" ~ "gold",
                                                   TRUE ~  "gray40")) %>%  pull(v.col)


V(net)$color <- v.color

set.seed(123)

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

par(mar = c(0.5, 0.5, 0.5, 0.5))
plot(net, 
     layout=layout_with_kk, 
     edge.arrow.size=0.85, 
     rescale=T,
     edge.color=adjustcolor("gray50", alpha.f = .6),
     vertex.size = 6.5,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.7,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black")

legend("topright" , c("Group A","Group A2", "Group B", "Group C"), pch = c(21, 21, 21,21),
       col= c("white","black", "black", "black"), pt.bg= c(colrs, "white","black", "black", "black"), pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c(as.character(1:6)), lwd = c(2:6,1)  , bty = "n", title = "R1b")




```

Colores de los nodos representan los diferentes grupos (A2, A, B y C), el diámetro de los links representan la intensidad de la interacción (1, 2, 3, 4, 5, 6) de la pregunta R3c, la forma del vertice o nodo indica si el actor de la PPA recibe/emite inversión o por el contrario ambas,el valor de 6 (Outro - especificar) fue recodificado de tal manera que su diámetro sea el mas pequeño, esto con la intención de resaltar los links con respuestas definidas y evitar confusiones.

\pagebreak

### Metricas Generales Red de negocios (No direccionada)


```{r rnegoSummMetricsNOdir, echo=FALSE,warning=FALSE,strip.white=FALSE}

      tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
             Value  = c(igraph::edge_density(net_no_dir, loops = FALSE),
                        igraph::centralization.betweenness(net_no_dir)$centralization,
                        igraph::centralization.degree (net_no_dir, mode = "all")$centralization,
                        igraph:: cluster_walktrap(net_no_dir) %>% igraph::modularity(),
                        mean(igraph::degree(net_no_dir, mode="all", normalized = F)),
                        igraph::transitivity(net_no_dir),
                        igraph::assortativity.degree(net_no_dir, directed = T),
                        igraph::eigen_centrality(net_no_dir, directed = T)$value %>%  round(.,2)
                        )) %>%
        dplyr::mutate_if(is.numeric, round, digits = 2) %>%
   data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "nego_mtric_summ_Ndir", ".csv")) %>%
        flextable(.,  cwidth = 2)

         
```


#### Metricas por cada Nodo (No direccionada)

```{r rnegoNodemetricsNodir, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE}

   metrics <-  tibble(nodes_id = V(net_no_dir)$name) %>% 
      dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
      dplyr::select(nodes_id, Nome, V1) %>%
      dplyr::mutate(degree         = igraph::degree(net_no_dir, mode="all", normalized = F),
                    betwe          = igraph::betweenness(net_no_dir) %>% round(.,1),
                    closeness      = igraph::closeness(net_no_dir, mode="all") %>% round(.,4),
                    ClusWalk       = igraph:: cluster_walktrap(net_no_dir) %>% membership(),
                    transitivLocal = igraph::transitivity(net_no_dir, type = "local")  %>% round(.,2),
                    Eigen_centr    = igraph::eigen_centrality(net_no_dir, directed = F)$vector %>%  round(.,2)
                    ) %>%
   dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "nego_all_mtric_Ndir", ".csv")) %>%
      flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth,"nego_NoDir_cluster_summary.csv")) %>% 
   flextable(.)

```


\pagebreak

### Metricas generales Red de negocios (Con loops/Overloaded)

```{r inegosummMetricsoverloaded, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE}

tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
             Value  = c(igraph::edge_density(overloaded_net, loops = FALSE),
                        igraph::centralization.betweenness(overloaded_net)$centralization,
                        igraph::centralization.degree (overloaded_net, mode = "all")$centralization,
                        igraph:: cluster_walktrap(overloaded_net) %>% igraph::modularity(),
                        mean(igraph::degree(overloaded_net, mode="all", normalized = F)),
                        igraph::transitivity(overloaded_net),
                        igraph::assortativity.degree(overloaded_net, directed = T),
                        igraph::eigen_centrality(overloaded_net, directed = F)$value %>%  round(.,2)
                        )) %>%
        dplyr::mutate_if(is.numeric, round, digits = 2) %>%
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "nego_mtric_summ_over", ".csv")) %>%
        flextable(.,  cwidth = 2) 


```

#### Metricas por cada Nodo (Con loops/Overloaded)

```{r inegoNodemetricsoverloaded, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE}

metrics <- tibble(nodes_id = V(overloaded_net)$name) %>% 
  dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
  dplyr::select(nodes_id, Nome, V1) %>%
  dplyr::mutate(degree         = igraph::degree(overloaded_net, mode="all", normalized = F),
                betwe          = igraph::betweenness(overloaded_net) %>% round(.,1),
                closeness      = igraph::closeness(overloaded_net, mode="all") %>% round(.,4),
                ClusWalk       = igraph:: cluster_walktrap(overloaded_net) %>% membership(),
                transitivLocal = igraph::transitivity(overloaded_net, type = "local")  %>% round(.,2),
                Eigen_centr    = igraph::eigen_centrality(overloaded_net, directed = F)$vector %>%  round(.,2)
  ) %>%
  dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %T>% 
   write_csv(., path = paste0(tbl_pth, "nego_all_mtric_over", ".csv")) %>%
  flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth, "nego_overloaded_cluster_summary.csv")) %>% 
   flextable(.)

```

\pagebreak

## Red de negocios más Grupo C (No Direccionada)

```{r rednego_grC, echo=FALSE,warning=FALSE, message = FALSE, cache = F, fig.width=15, fig.height=11, dpi =200}

red <- "nego"

nt1 <- d %>% 
  dplyr::select(R_Start_ID, R_Destiny_ID) %>% 
  dplyr::mutate_all(as.character)

nt2 <- read_excel(xls.file, sheet = "R5_outras_orgs") %>%
  dplyr::select(R_Start_ID, R_Destiny_ID = R5b_Destiny_ID, R5c) %>% 
  drop_na() %>% 
  mutate_all(as.character) %>% 
  dplyr::filter(R5c == "1") %>% 
  dplyr::select( -R5c)

nt_all <- bind_rows(nt1, nt2) 


 net <- graph_from_data_frame(d=  nt_all,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed= T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

  #save adjacency matrix
as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
  write_csv(., path = paste0(tbl_pth, "adj_m_nego_GrC", ".csv"))

colrs <- c("olivedrab3", "tomato", "gold", "gray40")
V(net)$color <- colrs[as.numeric(as.factor(V(net)$V1))]


set.seed(123)

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)


par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.label.dist=0,
     vertex.shape = NULL,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     asp = 0)


legend("topright" , c("Group A","Group A2", "Group B", "Group C"), pch = c(21, 21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= colrs, pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

 

  
#contar los links para cada nodo según el grupo
as_tibble(ends(net, E(net), names = T)) %>% 
  rename(start = V1, end = V2) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::select( ID_start = V1, everything()) %>% 
  dplyr::left_join(., groups, by = c("end"= "ID")) %>% 
  dplyr::select(start, end,  ID_start,ID_end = V1, everything()) %>% 
  group_by(ID_start, ID_end) %>% 
  tally() %>%
  ungroup() %>%
  dplyr::mutate(Ratio = paste(round(n/sum(n)*100,1), "%")) %>% 
  dplyr::select(Group_start = ID_start, Group_end = ID_end, Links_count = n, Ratio) %T>% 
  write_csv(.,  path = paste0(tbl_pth, paste0(red, "_node_links_count_GrC", ".csv"))) %>%
  flextable(.)

#contar total de nodos   
tibble(ID = V(net)$name) %>% 
  left_join(., groups, by = c("ID" = "ID")) %>% 
  group_by(V1) %>% 
  tally() %>% 
  dplyr::select(Group = V1, Node_counts = n) %T>% 
  write_csv(.,  path = paste0(tbl_pth, paste0(red, "_node_count_GrC", ".csv"))) %>%
  flextable(.)


tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
             Value  = c(igraph::edge_density(net, loops = FALSE),
                        igraph::centralization.betweenness(net)$centralization,
                        igraph::centralization.degree (net, mode = "all")$centralization,
                        igraph:: cluster_walktrap(net) %>% igraph::modularity(),
                        mean(igraph::degree(net, mode="all", normalized = F)),
                        igraph::transitivity(net),
                        igraph::assortativity.degree(net),
                        igraph::eigen_centrality(net, directed = T)$value %>%  round(.,2)
                        )) %>%
        dplyr::mutate_if(is.numeric, round, digits = 2) %>%
  data.frame()  %T>%
  write_csv(., path = paste0(tbl_pth, paste0(red, "_gnr_metrics_Grc", ".csv"))) %>% 
        flextable(.,  cwidth = 2)


 metrics <- tibble(nodes_id = V(net)$name) %>% 
      dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
      dplyr::select(nodes_id, V1) %>%
      dplyr::mutate(degree         = igraph::degree(net, mode="all", normalized = F),
                    betwe          = igraph::betweenness(net) %>% round(.,1),
                    closeness      = igraph::closeness(net, mode="all") %>% round(.,4),
                    ClusWalk       = igraph:: cluster_walktrap(net) %>% membership(),
                    transitivLocal = igraph::transitivity(net, type = "local")  %>% round(.,2),
                    Eigen_centr    = igraph::eigen_centrality(net, directed = T)$vector %>%  round(.,2)
                    ) %>%
   dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, red, "_all_GrC_metrics_over", ".csv")) %>% 
      flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth, red, "_GrC_cluster_summary.csv")) %>% 
   flextable(.)



```


\pagebreak

# Red de colaboración Institucional

```{r redcolabInst, echo=FALSE,warning=FALSE, message = FALSE, cache = TRUE}

nt1 <- read_excel(xls.file, sheet = "R4_colab_inst") %>%
  dplyr::filter(R_Start_ID != 25 & R_Destiny_ID != 25) %>% 
  dplyr::filter(R_Start_ID != 75 & R_Destiny_ID != 75)

d <- nt1 %>% 
  dplyr::select( R_Start_ID,  R_Destiny_ID, R4a, R4b, R4c) %>%
  dplyr::mutate(R4c = R4c+1, R4c = if_else(R4c == 7, 1, R4c)) %>%
  dplyr::mutate_all(as.character)

net <- graph_from_data_frame(d=  d,
                             vertices = groups %>% dplyr::select(ID, V1),
                             directed=T)%>%
                      igraph::delete.vertices(., igraph::degree(.) == 0)%>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))


#contar egos
nt1 %>% 
  dplyr::mutate_all(as.character) %>%
  dplyr::left_join(., groups, by = c("R_Start_ID" = "ID")) %>%
  dplyr::mutate(dummy = paste0(R_Start_ID, R_Start_ID_ego)) %>% 
  dplyr::filter(!duplicated(dummy)) %>% 
  dplyr::group_by(V1, R_Start_ID_ego) %>% 
  tally() %>%
  dplyr::select(Groups = V1, Ego = R_Start_ID_ego, Ego_count = n) %>%
  ungroup() %>% 
  data.frame()  %T>%
   write_csv(., path = paste0(tbl_pth, "colInst_ego_by_gr", ".csv")) %>% 
  flextable(.)


as_tibble(ends(net, E(net))) %>% 
  rename(start = V1, end = V2) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::select( ID_start = V1, everything()) %>% 
  dplyr::left_join(., groups, by = c("end"= "ID")) %>% 
  dplyr::select(start, end,  ID_start,ID_end = V1, everything()) %>% 
  group_by(ID_start, ID_end) %>% 
  tally() %>% 
   dplyr::select(Group_start = ID_start, Group_end = ID_end, Links_count = n) %>% 
  write_csv(.,  path = paste0(tbl_pth, "colInst_node_links_count", ".csv"))

```

\pagebreak

### Grupo A2

```{r rcolabInstgrA2, echo=FALSE, fig.height=11, fig.width=15, warning=FALSE, cache= TRUE, strip.white=FALSE}

a2 <- groups %>% filter(V1 == "A2") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

net_no_dir <- net

#save adjacency matrix
as_adjacency_matrix(net, type = "both", sparse = F) %>%
as.data.frame() %>%
   write_csv(., path = paste0(tbl_pth, "adj_m_colbaIns_Nodir", ".csv"))

edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "A2" ~ "tomato",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "A2 net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")

```

\pagebreak

### Grupo A

```{r rcolabInstgrA, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE}
#
set.seed(123)

a2 <- groups %>% filter(V1 == "A") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "A" ~ "olivedrab3",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "A net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")

```

\pagebreak

### Grupo B

```{r rcolabInstgrB, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE}

set.seed(123)

a2 <- groups %>% filter(V1 == "B") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "B" ~ "gold",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "B net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")


```

\pagebreak

### Entrevistados red Colaboración institucional

```{r rcolabInstentrev, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = FALSE}

set.seed(123)

red <- "colabInst"

  net <- graph_from_data_frame(d =  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

  
#cambiar color segun status
entrev_col <- entrevistados %>% 
  dplyr::mutate(v.col = case_when(
    status == "entrevistado" ~ "gold",
    TRUE ~ "royalblue3"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray50",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = entrev_col$v.col,
     asp = 0)

legend("topleft" , c("Entrevistado","No entrevistado"), 
       pch = c(21, 21),
       col= c("gold","royalblue3"), pt.bg= c("gold", "royalblue3"), 
       pt.cex=2, cex=.8, bty = "n",  title="Status")


entrev_col %>% 
  dplyr::left_join(., groups) %>% 
 dplyr::select(Node = ID, status, Nome, Group = V1) %T>% 
   write_csv(., path = paste0(tbl_pth, "entrev_", red, ".csv")) %>% 
  flextable(.)

entrev_col %>% 
  dplyr::left_join(., groups) %>% 
  dplyr::group_by(V1, status) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, status, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "entrev_", red, "_freq_byGRoup", ".csv")) %>%
  flextable(.)

```

\pagebreak

### Tipo de tipo de organização

```{r rcolabInst_tipo_org, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = FALSE}

set.seed(123)

red <- "colabInst"

  net <- graph_from_data_frame(d =  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

  
  
  color_vec <- brewer.pal(4,"Set1")

#cambiar color segun status
  vtx_col <- type_org %>% 
  dplyr::mutate(v.col = case_when(
    V39a == "1" ~ color_vec[1],
    V39a == "2" ~ color_vec[2],
    V39a == "3" ~ color_vec[3],
    V39a == "4" ~ color_vec[4],
    TRUE ~ "gray70"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

  
par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray50",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = vtx_col$v.col,
     asp = 0)

legend("topleft" , unique(vtx_col$V39a_lab) , 
       pch = c(21, 21),
       col=  unique(vtx_col$v.col), pt.bg= unique(vtx_col$v.col), 
       pt.cex=2, cex=.8, bty = "n",  title="Tipo de organização")


vtx_col %T>% 
   write_csv(., path = paste0(tbl_pth, "type_org_", red, ".csv")) %>% 
  flextable(.)

vtx_col %>% 
  dplyr::group_by(V1, V39a_lab) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, Type_V39a = V39a_lab, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "type_org_", red, "_V39a_byGRoup", ".csv")) %>%
  flextable(.)

vtx_col %>% 
  dplyr::group_by(V1, V39b_lab) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, Type_v39b = V39b_lab, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "type_org_", red, "_V39b_byGRoup", ".csv")) %>%
  flextable(.)

```

\pagebreak

### Entrevistado y Tipo de organização

```{r rcolabInst_entre_tipo_org, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = FALSE}

set.seed(123)

red <- "colabInst"

  net <- graph_from_data_frame(d =  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

  
 
 color_vec <- brewer.pal(4,"Set1")
#cambiar color segun status
  vtx_col <- type_org %>% 
  dplyr::mutate(v.col = case_when(
    V39a == "1" ~ color_vec[1],
    V39a == "2" ~ color_vec[2],
    V39a == "3" ~ color_vec[3],
    V39a == "4" ~ color_vec[4],
    TRUE ~ "gray70"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

  
  entrev_col <- entrevistados %>% 
  dplyr::mutate(v.shp = case_when(
    status == "entrevistado" ~ "circle",
    TRUE ~ "square"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

  
par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray50",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = entrev_col$v.shp,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = vtx_col$v.col,
     asp = 0)

legend("topleft" , unique(vtx_col$V39a_lab) , 
       pch = rep(21, length(unique(vtx_col$V39a_lab))),
       col=  unique(vtx_col$v.col), pt.bg= unique(vtx_col$v.col), 
       pt.cex=2, cex=.8, bty = "n",  title="Tipo de organização")

legend("bottomleft" , c("No entrevistados", "Entrevistados") , 
       pch = c(22, 21),
       col=  c("black", "black"), pt.bg= c("black", "black"), 
       pt.cex=2, cex=.8, bty = "n",  title="Status")

vtx_col %>%
  left_join(., entrev_col, by = c("ID" = "ID"),  suffix = c("", ".to_remove")) %>%
  dplyr::select(-contains("to_remove")) %>% 
  dplyr::select(Group = ID, V39a:V39b_lab, status) %T>% 
   write_csv(., path = paste0(tbl_pth, "entrev_type_org_", red, ".csv")) %>% 
  flextable(.)

vtx_col %>%
  left_join(., entrev_col, by = c("ID" = "ID"),  suffix = c("", ".to_remove")) %>%
  dplyr::select(-contains("to_remove")) %>% 
  dplyr::select(Group = ID, V39a:V39b_lab, status) %>%  
  dplyr::group_by(V1,  status, V39a_lab) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, status, Type_V39a = V39a_lab, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "entrev_type_org_", red, "_byGR", ".csv")) %>%
  flextable(.)



```

\pagebreak

## red de colaboración Institucional teniendo en cuenta a R4a

```{r rcolabInstINPPA, echo=FALSE,fig.width=13, fig.height=11,warning=FALSE,strip.white=FALSE, dpi = 300}

  net <- graph_from_data_frame(d=  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed= T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))


colrs <- c("olivedrab3", "dodgerblue2", "gold", "gray40")

v.color <- tibble(V1 = V(net)$V1) %>% 
  dplyr::mutate(v.col = case_when( V1 == "A2" ~ "dodgerblue2",
                                   V1 == "A" ~  "olivedrab3",
                                   V1 == "B" ~ "gold",
                                   TRUE ~  "gray40")) %>% 
  pull(v.col)

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

edge.col <- tibble(var = E(net)$R4a) %>% 
  dplyr::mutate(col = dplyr::recode(var,  "0" = "gray48", "1" =  "darkgreen",  "2" = "seashell1", "3" =  "seashell3" )) %>% 
  pull(col) 
    

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

v_color <- tibble(id = V(net)$name) %>% 
  dplyr::left_join(., groups, by = c("id" = "ID") ) %>% 
  dplyr::left_join(., gr_colors, by = c("V1" = "V1")) %>% 
  pull(color)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0, 
     rescale= TRUE,
     edge.color= edge.col,
     edge.width = 2.2,
     vertex.color = v_color,
     vertex.size = 6.5,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     asp = 0)

legend("topright" , c("PPA members","Executive Coordination (in 2019)", "PPA partners and collaborators"), pch = c(21, 21, 21),
       col= c("black","black", "black"), pt.bg= c(colrs[-4]), pt.cex=2, cex=.8, bty = "n",  title="GROUPS")
legend("bottomright", c( "In the PPA", "Outside the PPA", "Unanswered"), lty = c(1,1, 1), col = c("darkgreen", "gray48", "seashell3"), lwd = c(3,3,3), pt.cex=2, cex=0.8, bty="n", title = "CONTEXT OF THE RELATION")


# frecuencias por cada nodo de los tipos de edge que tiene (R3a)
summ <-  tibble(var = E(net)$R4a) %>%
  dplyr::mutate( start  = igraph::ends(net, es=E(net), names=T)[,1]) %>%
  left_join(., groups, by = c("start" = "ID"))

summ %>%
  group_by( V1, var) %>%
  tally() %>%
  dplyr::mutate(freq = round(n/sum(n),2)*100, freq = paste0(freq, "%") , var = case_when(
    var == "0" ~ "Out PPA",
    var == "1" ~ "In PPA",
    var == "3" ~ "Não sei dizer",
    TRUE ~ "Outro"
  )) %>% 
  dplyr::select(Group = V1, R4a = var, Count = n, Frequency = freq) %>%
   data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "colInst_R4a_summ", ".csv")) %>%
  flextable(.)

# frecuencias por cada nodo de los tipos de edge que tiene (R2a)
summ %>%  
  dplyr::mutate(var = case_when(
    var == "0" ~ "Out_PPA",
    var == "1" ~ "In_PPA",
    var == "3" ~ "Nao_sei_dizer",
    TRUE ~ "Outro"
  )) %>% 
  group_by(start, var) %>%
  tally() %>% 
  pivot_wider(., names_from = var, values_from = n) %>% 
  ungroup() %>% 
  mutate_all(., .funs = function(i){
    x <- ifelse(is.na(i), 0, i)
    return(x)
  }) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::mutate(Nao_sei_dizer = if("Nao_sei_dizer" %in% names(.)){Nao_sei_dizer}else{0},
                total = (In_PPA + Out_PPA + Nao_sei_dizer), 
                In_PPA_frq = round(In_PPA/total,2)*100,
                Out_PPA_frq = round(Out_PPA/total,2)*100,
                 Nao_sei_dizer_frq =  round(Nao_sei_dizer/total,2)*100) %>% 
  dplyr::select(ID = start, Group=V1, Nome, In_PPA:Nao_sei_dizer, In_PPA_frq:Nao_sei_dizer_frq) %>% 
   data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "colInst_R4a_by_node", ".csv")) %>%
  flextable(.) %>% set_caption(., caption = "R3a summary by Node")

 #Porcentaje in_ppa y out_ppa por cada grupo
red <- "colabInst"

summ_deg <- summ %>%
  dplyr::mutate(var = case_when(
    var == "0" ~ "Out PPA",
    var == "1" ~ "In PPA",
    var == "3" ~ "Não sei dizer",
    TRUE ~ "Outro"
  )) %>% 
  pivot_wider(id_cols = Nome, names_from = var, values_from = var, values_fn = list(var = length)) %>% 
  mutate_if(is.numeric, function(i){ifelse(is.na(i), 0, i)}) %>% 
  dplyr::left_join(., groups %>% select(Nome, V1, ID), by = c("Nome" = "Nome")) %>% 
  dplyr::select(ID, group = V1, Nome, in_deg = `In PPA`, out_deg = `Out PPA`, not_avaliable = Outro)

### conteos por cada empresa 

summ_deg %>% 
  dplyr::left_join(., entrevistados,  by = c("ID" = "ID")) %>% 
  dplyr::left_join(.,  type_org %>%  select(ID, V39a_lab, V39b_lab),  by = c("ID" = "ID")) %>%
  dplyr::mutate(sum_all = in_deg +out_deg+not_avaliable,
                percentage_in_ppa = paste0(round((in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((not_avaliable/sum(sum_all))*100,1),"%")
                ) %>% 
  dplyr::select(group, Nome, "count_in_ppa" = in_deg, "count_out_ppa" = out_deg, "count_not_avaliable" = not_avaliable, percentage_in_ppa:percentage_not_av, status:V39b_lab) %>%   
  write_csv(., path = paste0(tbl_pth, red,"_inPPA_percent_all", ".csv")) 

### porcentages por grupo
summ_deg %>% 
  dplyr::group_by(group) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group, 
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>% 
  write_csv(., path = paste0(tbl_pth, red,"_inPPA_percent", ".csv")) 

# por tipo de empresa v39a
summ_deg %>% 
  dplyr::left_join(., type_org %>%  select(ID, V39a_lab), by = c("ID" = "ID")) %>% 
  dplyr::group_by(group, V39a_lab) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group,
                V39a_lab,
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>% 
  write_csv(., path = paste0(tbl_pth, red,"_inPPA_perc_by_V39a", ".csv"))  

# por tipo de empresa v39b
summ_deg %>% 
  dplyr::left_join(., type_org %>%  select(ID, V39b_lab), by = c("ID" = "ID")) %>% 
  dplyr::group_by(group, V39b_lab) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group,
                V39b_lab,
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>% 
  write_csv(., path = paste0(tbl_pth, red, "_inPPA_perc_by_V39b", ".csv"))  

# por tipo de entrevista
summ_deg %>% 
  dplyr::left_join(., entrevistados, by = c("ID" = "ID")) %>% 
 dplyr::group_by(group, status) %>%
  dplyr::summarise(sum_in_deg   = sum(in_deg),
            sum_out_deg  = sum(out_deg),
            sum_not_av  = sum(not_avaliable),
            sum_all      = sum_in_deg+sum_out_deg+sum_not_av)  %>% 
  ungroup() %>% 
  dplyr::mutate(percentage_in_ppa = paste0(round((sum_in_deg/sum(sum_all))*100,1), "%"),
                percentage_out_ppa = paste0(round((sum_out_deg/sum(sum_all))*100,1),"%"),
                percentage_not_av = paste0(round((sum_not_av/sum(sum_all))*100,1),"%")) %>% 
  dplyr::select(group,
                status,
                Count_links_in_ppa = sum_in_deg, 
                Count_links_out_ppa = sum_out_deg,  
                count_links_not_avaliable = sum_not_av,
                percentage_in_ppa, 
                percentage_out_ppa,
                percentage_not_av) %>%  
  write_csv(., path = paste0(tbl_pth, red, "_inPPA_perc_by_status", ".csv"))


```

Colores de los nodos representan los diferentes grupos (A2, A, B y C), el diámetro de los links representan la intensidad de la interacción (1, 2, 3, 4, 5, 6) de la pregunta R3c, la forma del vertice o nodo indica si el actor de la PPA recibe/emite inversión o por el contrario ambas, el valor de 6 (Outro - especificar) fue recodificado de tal manera que su diámetro sea el mas pequeño, esto con la intención de resaltar los links con respuestas definidas y evitar confusiones. Adicionalmente en este groupsáfico se resalta según el color de los links si la interacción se da dentro del contexto de la PPA (pregunta R3a).

\pagebreak


### Red de colaboración Institucionalcon Todas las  características (Overloaded)

```{r rcolabInstverloaded, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, message = FALSE, cache = TRUE}


  net <- graph_from_data_frame(d=  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0)
  
overloaded_net <- net

#save adjacency matrix

  as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
    write_csv(., path = paste0(tbl_pth, "adj_m_colbaIns_over", ".csv"))

  
## tamaño de los edges
  
E(net)$width <- as.numeric(E(net)$R4c)
  
  
colrs <- c("olivedrab3", "tomato", "gold", "gray40")
v.color <- tibble(V1 = V(net)$V1) %>% 
                  dplyr::mutate(v.col = case_when( V1 == "A2" ~ "tomato",
                                                   V1 == "A" ~  "olivedrab3",
                                                   V1 == "B" ~ "gold",
                                                   TRUE ~  "gray40")) %>%  pull(v.col)


V(net)$color <- v.color

set.seed(123)

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

par(mar = c(0.5, 0.5, 0.5, 0.5))
plot(net, 
     layout=layout_with_kk, 
     edge.arrow.size=0, 
     rescale=T,
     edge.color=adjustcolor("gray50", alpha.f = .6),
     vertex.size = 6.5,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.7,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black")

legend("topright" , c("Group A","Group A2", "Group B", "Group C"), pch = c(21, 21, 21,21),
       col= c("white","black", "black", "black"), pt.bg= c(colrs, "white","black", "black", "black"), pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c(as.character(1:6)), lwd = c(2:6,1)  , bty = "n", title = "R4b")




```

Colores de los nodos representan los diferentes grupos (A2, A, B y C), el diámetro de los links representan la intensidad de la interacción (1, 2, 3, 4, 5, 6) de la pregunta R3c, la forma del vertice o nodo indica si el actor de la PPA recibe/emite inversión o por el contrario ambas,el valor de 6 (Outro - especificar) fue recodificado de tal manera que su diámetro sea el mas pequeño, esto con la intención de resaltar los links con respuestas definidas y evitar confusiones.

\pagebreak

### Red de Colaboración Institucional R4b descripción

```{r rcolabInstR4bgrphs, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, message = FALSE, cache = TRUE}
net <- graph_from_data_frame(d=  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0)%>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

summ_r4b <-  tibble(var = E(net)$R4b) %>%
  dplyr::mutate( start  = igraph::ends(net, es=E(net), names=T)[,1]) %>%
  left_join(., groups, by = c("start" = "ID"))

summ_r4b  %>%
  group_by( V1, var) %>%
  tally() %>%
  dplyr::mutate(freq = round(n/sum(n),2)*100, freq = paste0(freq, "%") , var = case_when(
    var == "1" ~ "Ganho reputacional",
    var == "2" ~ "Ganho de visibilidade",
    var == "3" ~ "Criação de regulamento setorial",
    var == "4" ~ "Incidência em políticas públicas",
    var == "5" ~ "Colaboração em território empresas atuam",
    var == "6" ~ "Fortalecimento negócios de impacto",
    var == "7" ~ "Articulação organizações compartilham objetivos",
    var == "8" ~ "Colaboração no desenvolvimento de cadeias da sociobio de interesse mútuo",
    TRUE ~ "Outro"
  )) %>% 
  dplyr::select(Group = V1, R4a = var, Count = n, Frequency = freq) %>%
  ggplot(aes(x =  R4a , y = Frequency ,fill = .$Group))+
  geom_bar(stat = "identity", colour="black")+ 
  facet_wrap(~Group)+
  scale_fill_manual(values = c("olivedrab3", "tomato", "gold"), name = "")+
  theme(legend.position = "none")+
  coord_flip()+
  scale_y_discrete(breaks= paste0(seq(0,100, 5), "%") )
```


```{r rcolabInstR4bsumm, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, message = FALSE, cache = FALSE}

summ_r4b  %>%
  group_by( V1, var) %>%
  tally() %>%
  dplyr::mutate(freq = round(n/sum(n),2)*100, freq = paste0(freq, "%") , var = case_when(
    var == "1" ~ "Ganho reputacional",
    var == "2" ~ "Ganho de visibilidade",
    var == "3" ~ "Criação de regulamento setorial",
    var == "4" ~ "Incidência em políticas públicas",
    var == "5" ~ "Colaboração em território em que ambas as empresas atuam",
    var == "6" ~ "Fortalecimento do ambiente de negócios de impacto na Amazônia",
    var == "7" ~ "Articulação interinstitucional com organizações que compartilham objetivos estratégicos",
    var == "8" ~ "Colaboração no desenvolvimento de cadeias da sociobio de interesse mútuo",
    TRUE ~ "Outro"
  )) %>% 
  dplyr::select(Group = V1, R4a = var, Count = n, Frequency = freq) %>%
   data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "colInst_R4b_summ", ".csv")) %>%
  flextable(., cwidth = 2) 


summ_r4b  %>%
  group_by( V1, var) %>%
  tally() %>%
  ungroup() %>% 
  dplyr::mutate(freq = round(n/sum(n),2)*100, freq = paste0(freq, "%") , var = case_when(
    var == "1" ~ "Ganho reputacional",
    var == "2" ~ "Ganho de visibilidade",
    var == "3" ~ "Criação de regulamento setorial",
    var == "4" ~ "Incidência em políticas públicas",
    var == "5" ~ "Colaboração em território em que ambas as empresas atuam",
    var == "6" ~ "Fortalecimento do ambiente de negócios de impacto na Amazônia",
    var == "7" ~ "Articulação interinstitucional com organizações que compartilham objetivos estratégicos",
    var == "8" ~ "Colaboração no desenvolvimento de cadeias da sociobio de interesse mútuo",
    TRUE ~ "Outro"
  )) %>% 
  dplyr::select(Group = V1, R4a = var, Count = n, Frequency = freq) %>%
   data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "colInst_R4b_summ_ratio", ".csv")) 

```

\pagebreak

### Metricas Generales Red de Colaboración Institucional (No direccionada)

```{r rolabInstSummMetricsNOdir, echo=FALSE,warning=FALSE,strip.white=FALSE}

      tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
             Value  = c(igraph::edge_density(net_no_dir, loops = FALSE),
                        igraph::centralization.betweenness(net_no_dir)$centralization,
                        igraph::centralization.degree (net_no_dir, mode = "all")$centralization,
                        igraph:: cluster_walktrap(net_no_dir) %>% igraph::modularity(),
                        mean(igraph::degree(net_no_dir, mode="all", normalized = F)),
                        igraph::transitivity(net_no_dir),
                        igraph::assortativity.degree(net_no_dir, directed = F),
                        igraph::eigen_centrality(net_no_dir, directed = F)$value %>%  round(.,2)
                        )) %>%
        dplyr::mutate_if(is.numeric, round, digits = 2) %>%
   data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "colInst_mtric_summ_Ndir", ".csv")) %>%
        flextable(.,  cwidth = 2)

         
```


#### Metricas por cada Nodo (No direccionada)

```{r rcolabInstNodemetricsNodir, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE}

    metrics <- tibble(nodes_id = V(net_no_dir)$name) %>% 
      dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
      dplyr::select(nodes_id, Nome, V1) %>%
      dplyr::mutate(degree         = igraph::degree(net_no_dir, mode="all", normalized = F),
                    betwe          = igraph::betweenness(net_no_dir) %>% round(.,1),
                    closeness      = igraph::closeness(net_no_dir, mode="all") %>% round(.,4),
                    ClusWalk       = igraph:: cluster_walktrap(net_no_dir) %>% membership(),
                    transitivLocal = igraph::transitivity(net_no_dir, type = "local")  %>% round(.,2),
                    Eigen_centr    = igraph::eigen_centrality(net_no_dir, directed = F)$vector %>%  round(.,2)
                    ) %>%
   dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "colinst_all_mtric_Ndir", ".csv"))  %>%
      flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth, "colabInst_NoDir_cluster_summary.csv")) %>% 
   flextable(.)

```


\pagebreak

### Metricas generales Red Colaboración Institucional (Con loops/Overloaded)

```{r icolabInstsummMetricsoverloaded, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE}

tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
             Value  = c(igraph::edge_density(overloaded_net, loops = FALSE),
                        igraph::centralization.betweenness(overloaded_net)$centralization,
                        igraph::centralization.degree (overloaded_net, mode = "all")$centralization,
                        igraph:: cluster_walktrap(overloaded_net) %>% igraph::modularity(),
                        mean(igraph::degree(overloaded_net, mode="all", normalized = F)),
                        igraph::transitivity(overloaded_net),
                        igraph::assortativity.degree(overloaded_net, directed = T),
                        igraph::eigen_centrality(overloaded_net, directed = T)$value %>%  round(.,2)
                        )) %>%
        dplyr::mutate_if(is.numeric, round, digits = 2) %>%
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "colInst_mtric_summ_over", ".csv")) %>%
        flextable(.,  cwidth = 2) 


```

#### Metricas por cada Nodo (Con loops/Overloaded)

```{r icolabInstNodemetricsoverloaded, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE}

    metrics <- tibble(nodes_id = V(overloaded_net)$name) %>% 
      dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
      dplyr::select(nodes_id, Nome, V1) %>%
      dplyr::mutate(degree         = igraph::degree(overloaded_net, mode="all", normalized = F),
                    betwe          = igraph::betweenness(overloaded_net) %>% round(.,1),
                    closeness      = igraph::closeness(overloaded_net, mode="all") %>% round(.,4),
                    ClusWalk       = igraph::cluster_walktrap(overloaded_net) %>% membership(),
                    transitivLocal = igraph::transitivity(overloaded_net, type = "local")  %>% round(.,2),
                    Eigen_centr    = igraph::eigen_centrality(overloaded_net, directed = T)$vector %>%  round(.,2)
                    ) %>%
   dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "colInst_all_mtric_over", ".csv")) %>%
      flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth, "colabInst_overloaded_cluster_summary.csv")) %>% 
   flextable(.)

```

\pagebreak

## Red de Colaboración Institucional más Grupo C (No Direccionada)

```{r redcolabInst_grC, echo=FALSE,warning=FALSE, message = FALSE, cache = F, fig.width=15, fig.height=11, dpi =200}

red <- "colInst"

nt1 <- d %>% 
  dplyr::select(R_Start_ID, R_Destiny_ID) %>% 
  dplyr::mutate_all(as.character)

nt2 <- read_excel(xls.file, sheet = "R5_outras_orgs") %>%
  dplyr::select(R_Start_ID, R_Destiny_ID = R5b_Destiny_ID, R5c) %>% 
  drop_na() %>% 
  mutate_all(as.character) %>% 
  dplyr::filter(R5c == "4") %>% 
  dplyr::select( -R5c)

nt_all <- bind_rows(nt1, nt2) 


 net <- graph_from_data_frame(d=  nt_all,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed= T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

 #save adjacency matrix
as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
  write_csv(., path = paste0(tbl_pth, "adj_m_colabInst_GrC", ".csv"))

colrs <- c("olivedrab3", "tomato", "gold", "gray40")
V(net)$color <- colrs[as.numeric(as.factor(V(net)$V1))]


set.seed(123)

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)


par(bg = NA)
plot(net, 
     layout= layout_with_fr, 
     edge.arrow.size=0, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.label.dist=0,
     vertex.shape = NULL,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     asp = 0)


legend("topright" , c("Group A","Group A2", "Group B", "Group C"), pch = c(21, 21, 21,21),
       col= c("black","black", "black", "black"), pt.bg= colrs, pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

 

  
#contar los links para cada nodo según el grupo
as_tibble(ends(net, E(net), names = T)) %>% 
  rename(start = V1, end = V2) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::select( ID_start = V1, everything()) %>% 
  dplyr::left_join(., groups, by = c("end"= "ID")) %>% 
  dplyr::select(start, end,  ID_start,ID_end = V1, everything()) %>% 
  group_by(ID_start, ID_end) %>% 
  tally() %>%
  ungroup() %>%
  dplyr::mutate(Ratio = paste(round(n/sum(n)*100,1), "%")) %>% 
  dplyr::select(Group_start = ID_start, Group_end = ID_end, Links_count = n, Ratio) %T>% 
  write_csv(.,  path = paste0(tbl_pth, paste0(red, "_node_links_count_GrC", ".csv"))) %>%
  flextable(.)

#contar total de nodos   
tibble(ID = V(net)$name) %>% 
  left_join(., groups, by = c("ID" = "ID")) %>% 
  group_by(V1) %>% 
  tally() %>% 
  dplyr::select(Group = V1, Node_counts = n) %T>% 
  write_csv(.,  path = paste0(tbl_pth, paste0(red, "_node_count_GrC", ".csv"))) %>%
  flextable(.)


tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
             Value  = c(igraph::edge_density(net, loops = FALSE),
                        igraph::centralization.betweenness(net)$centralization,
                        igraph::centralization.degree (net, mode = "all")$centralization,
                        igraph:: cluster_walktrap(net) %>% igraph::modularity(),
                        mean(igraph::degree(net, mode="all", normalized = F)),
                        igraph::transitivity(net),
                        igraph::assortativity.degree(net),
                        igraph::eigen_centrality(net, directed = T)$value %>%  round(.,2)
                        )) %>%
        dplyr::mutate_if(is.numeric, round, digits = 2) %>%
  data.frame()  %T>%
  write_csv(., path = paste0(tbl_pth, paste0(red, "_gnr_metrics_Grc", ".csv"))) %>% 
        flextable(.,  cwidth = 2)


 metrics <- tibble(nodes_id = V(net)$name) %>% 
      dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
      dplyr::select(nodes_id, V1) %>%
      dplyr::mutate(degree         = igraph::degree(net, mode="all", normalized = F),
                    betwe          = igraph::betweenness(net) %>% round(.,1),
                    closeness      = igraph::closeness(net, mode="all") %>% round(.,4),
                    ClusWalk       = igraph:: cluster_walktrap(net) %>% membership(),
                    transitivLocal = igraph::transitivity(net, type = "local")  %>% round(.,2),
                    Eigen_centr    = igraph::eigen_centrality(net, directed = T)$vector %>%  round(.,2)
                    ) %>%
   dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, red, "_all_GrC_metrics_over", ".csv")) %>% 
      flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %T>% 
  write_csv(., path = paste0(tbl_pth, red, "_GrC_cluster_summary.csv")) %>% 
   flextable(.)



```



\pagebreak

# red de intensificación

```{r redintesi, echo=FALSE,warning=FALSE, message = FALSE, cache = TRUE}

nt1 <- read_excel(xls.file, sheet = "R_intensificação") %>%
  dplyr::filter(R_Start_ID != 25 & R_Destiny_ID != 25) %>% 
  dplyr::filter(R_Start_ID != 75 & R_Destiny_ID != 75)


d <- nt1 %>% 
  dplyr::select( R_Start_ID,  R_Destiny_ID, R_b) %>%
  dplyr::mutate_all(as.character)

net <- graph_from_data_frame(d=  d,
                             vertices = groups %>% dplyr::select(ID, V1),
                             directed=T)%>%
                      igraph::delete.vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

 #save adjacency matrix
as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
  write_csv(., path = paste0(tbl_pth, "adj_m_Intensi_dir", ".csv"))


#contar egos
nt1 %>% 
  dplyr::mutate_all(as.character) %>%
  dplyr::left_join(., groups, by = c("R_Start_ID" = "ID")) %>%
  dplyr::mutate(dummy = paste0(R_Start_ID, R_Start_ID_ego)) %>% 
  dplyr::filter(!duplicated(dummy)) %>% 
  dplyr::group_by(V1, R_Start_ID_ego) %>% 
  tally() %>%
  dplyr::select(Groups = V1, Ego = R_Start_ID_ego, Ego_count = n) %>%
  ungroup() %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "intensi_ego_summary", ".csv")) %>%
  flextable(.)

as_tibble(ends(net, E(net))) %>% 
  rename(start = V1, end = V2) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::select( ID_start = V1, everything()) %>% 
  dplyr::left_join(., groups, by = c("end"= "ID")) %>% 
  dplyr::select(start, end,  ID_start,ID_end = V1, everything()) %>% 
  group_by(ID_start, ID_end) %>% 
  tally() %>% 
   dplyr::select(Group_start = ID_start, Group_end = ID_end, Links_count = n) %>% 
  write_csv(.,  path = paste0(tbl_pth, "intensi_node_links_count", ".csv"))


```

### Grupo A2

```{r rintensiA2, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = TRUE}

a2 <- groups %>% filter(V1 == "A2") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

net_no_dir <- net

#save adjacency matrix
  as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
      write_csv(., path = paste0(tbl_pth, "adj_m_intesi_Nodir", ".csv"))

edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "A2" ~ "tomato",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "A2 net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")

```

\pagebreak

### Grupo A

```{r rintensigrA, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE}
#
set.seed(123)

a2 <- groups %>% filter(V1 == "A") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "A" ~ "olivedrab3",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "A net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")

```

\pagebreak

### Grupo B

```{r rintensigrB, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE}

set.seed(123)

a2 <- groups %>% filter(V1 == "B") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "B" ~ "gold",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "B net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")


```

\pagebreak


## red de intensificación teniendo en cuenta R_b

```{r rintensiR_b, echo=FALSE,fig.width=13, fig.height=11,warning=FALSE,strip.white=FALSE}

  net <- graph_from_data_frame(d=  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed= T)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))




colrs <- c("olivedrab3", "tomato", "gold", "gray40")

v.color <- tibble(V1 = V(net)$V1) %>% 
  dplyr::mutate(v.col = case_when( V1 == "A2" ~ "tomato",
                                   V1 == "A" ~  "olivedrab3",
                                   V1 == "B" ~ "gold",
                                   TRUE ~  "gray40")) %>% 
  pull(v.col)

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

edge.col <- tibble(var = E(net)$R_b) %>% 
  dplyr::mutate(col = dplyr::recode(var,  "0" = "orange", "1" =  "darkgreen",  "2" = "grey70", "3" =  "grey70" )) %>% pull(col) 
  

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0, 
     rescale= TRUE,
     edge.color= edge.col,
     vertex.color = v.color,
     vertex.size = 6.5,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.7,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B", "Group C"), pch = c(21, 21, 21,21),
       col= c("white","black", "black", "black"), pt.bg= c(colrs, "white","black", "black", "black"), pt.cex=2, cex=.8, bty = "n",  title="GROUPS")
legend("bottomright", c( "Sim", "Não", "Não se aplica", "Não disponível"), lty = c(1,1, 1, 1), col = c("darkgreen", "orange", "grey70", "grey70"), lwd = c(3,3,3,3), pt.cex=2, cex=0.8, bty="n", title = "R_b")


# frecuencias por cada nodo de los tipos de edge que tiene (R_b)
summ <-  tibble(var = E(net)$R_b) %>%
  dplyr::mutate( start  = igraph::ends(net, es=E(net), names=T)[,1]) %>%
  left_join(., groups, by = c("start" = "ID"))

summ %>%
  group_by( V1, var) %>%
  tally() %>%
  dplyr::mutate(freq = round(n/sum(n),2)*100, freq = paste0(freq, "%") , var = case_when(
    var == "0" ~ "Não",
    var == "1" ~ "Sim",
    var == "2" ~ "Não se aplica",
    TRUE ~ "Não disponível"
  )) %>% 
  dplyr::select(Group = V1, R_b = var, Count = n, Frequency = freq) %>%
   data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "intensi_Rb_summ", ".csv"))%>%
  flextable(.)

# frecuencias por cada nodo de los tipos de edge que tiene (R2a)
summ %>%  
  dplyr::mutate(var = case_when(
    var == "0" ~ "Nao",
    var == "1" ~ "Sim",
    var == "3" ~ "Nao_se_aplica",
    TRUE ~ "Nao_disponivel"
  )) %>% 
  group_by(start, var) %>%
  tally() %>% 
  pivot_wider(., names_from = var, values_from = n) %>% 
  ungroup() %>% 
  mutate_all(., .funs = function(i){
    x <- ifelse(is.na(i), 0, i)
    return(x)
  }) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::mutate(Nao_disponivel = if("Nao_disponivel" %in% names(.)){Nao_disponivel}else{0},
                total = (Nao + Sim + Nao_se_aplica + Nao_disponivel), 
                Nao_frq = round(Nao/total,2)*100,
                Sim_frq = round(Sim/total,2)*100,
               Nao_se_aplica_frq = round(Nao_se_aplica/total,2)*100,
                 Nao_disponivel_frq =  round(Nao_disponivel/total,2)*100) %>% 
  dplyr::select(ID = start, Group=V1, Nome, Nao:Sim, Nao_frq:Nao_disponivel_frq) %>% 
   data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "intensi_Rb_by_node", ".csv")) %>%
  flextable(.) %>% set_caption(., caption = "R_b summary by Node")

 

```

Colores de los nodos representan los diferentes grupos (A2, A, B y C), el diámetro de los links representan la intensidad de la interacción (1, 2, 3, 4, 5, 6) de la pregunta R3c, la forma del vertice o nodo indica si el actor de la PPA recibe/emite inversión o por el contrario ambas, el valor de 6 (Outro - especificar) fue recodificado de tal manera que su diámetro sea el mas pequeño, esto con la intención de resaltar los links con respuestas definidas y evitar confusiones. Adicionalmente en este groupsáfico se resalta según el color de los links si la interacción se da dentro del contexto de la PPA (pregunta R3a).

\pagebreak

### Red de Intensificación Todas las  características (Overloaded)

```{r rintensioverloaded, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, message = FALSE, cache = TRUE}


  net <- graph_from_data_frame(d=  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0)
  
overloaded_net <- net


#save adjacency matrix
  as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
    write_csv(., path = paste0(tbl_pth, "adj_m_intesi_over", ".csv"))
## tamaño de los edges
E(net)$width <- 1
  
  
colrs <- c("olivedrab3", "tomato", "gold", "gray40")
v.color <- tibble(V1 = V(net)$V1) %>% 
                  dplyr::mutate(v.col = case_when( V1 == "A2" ~ "tomato",
                                                   V1 == "A" ~  "olivedrab3",
                                                   V1 == "B" ~ "gold",
                                                   TRUE ~  "gray40")) %>%  pull(v.col)


V(net)$color <- v.color

set.seed(123)

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

par(mar = c(0.5, 0.5, 0.5, 0.5))
plot(net, 
     layout=layout_with_kk, 
     edge.arrow.size=0.85, 
     rescale=T,
     edge.color=adjustcolor("gray50", alpha.f = .6),
     vertex.size = 6.5,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.7,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black")

legend("topright" , c("Group A","Group A2", "Group B", "Group C"), pch = c(21, 21, 21,21),
       col= c("white","black", "black", "black"), pt.bg= c(colrs, "white","black", "black", "black"), pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

#legend("bottomright", c(as.character(1:6)), lwd = c(2:6,1)  , bty = "n", title = "R4b")




```

Colores de los nodos representan los diferentes grupos (A2, A, B y C), el diámetro de los links representan la intensidad de la interacción (1, 2, 3, 4, 5, 6) de la pregunta R3c, la forma del vertice o nodo indica si el actor de la PPA recibe/emite inversión o por el contrario ambas,el valor de 6 (Outro - especificar) fue recodificado de tal manera que su diámetro sea el mas pequeño, esto con la intención de resaltar los links con respuestas definidas y evitar confusiones.

\pagebreak


### Metricas Generales Red de intensificación (No direccionada)

```{r rintensiSummMetricsNOdir, echo=FALSE,warning=FALSE,strip.white=FALSE}

      tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
             Value  = c(igraph::edge_density(net_no_dir, loops = FALSE),
                        igraph::centralization.betweenness(net_no_dir)$centralization,
                        igraph::centralization.degree (net_no_dir, mode = "all")$centralization,
                        igraph:: cluster_walktrap(net_no_dir) %>% igraph::modularity(),
                        mean(igraph::degree(net_no_dir, mode="all", normalized = F)),
                        igraph::transitivity(net_no_dir),
                        igraph::assortativity.degree(net_no_dir, directed = T),
                        igraph::eigen_centrality(net_no_dir, directed = T)$value %>%  round(.,2)
                        )) %>%
        dplyr::mutate_if(is.numeric, round, digits = 2) %>%
   data.frame()  %T>% 
    write_csv(., path = paste0(tbl_pth, "intensi_mtric_summ_Ndir", ".csv")) %>%
        flextable(.,  cwidth = 2)

         
```


#### Metricas por cada Nodo (No direccionada)

```{r rintensiNodemetricsNodir, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE,  message = FALSE,}

   metrics <- tibble(nodes_id = V(net_no_dir)$name) %>% 
      dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
      dplyr::select(nodes_id, Nome, V1) %>%
      dplyr::mutate(degree         = igraph::degree(net_no_dir, mode="all", normalized = F),
                    betwe          = igraph::betweenness(net_no_dir) %>% round(.,1),
                    closeness      = igraph::closeness(net_no_dir, mode="all") %>% round(.,4),
                    ClusWalk       = igraph:: cluster_walktrap(net_no_dir) %>% membership(),
                    transitivLocal = igraph::transitivity(net_no_dir, type = "local")  %>% round(.,2),
                    Eigen_centr    = igraph::eigen_centrality(net_no_dir, directed = F)$vector %>%  round(.,2)
                    ) %>%
   dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics%>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "intensi_all_mtric_Ndir", ".csv")) %>%
      flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %>% 
  write_csv(., path = paste0(tbl_pth,"instensi_NoDir_cluster_summary.csv")) %T>% 
   flextable(.)
```

\pagebreak

### Metricas generales Red de intensificación (Direccionada/Con loops/Overloaded)

```{r rintensisummMetricsoverloaded, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE,  message = FALSE,}

tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
             Value  = c(igraph::edge_density(overloaded_net, loops = FALSE),
                        igraph::centralization.betweenness(overloaded_net)$centralization,
                        igraph::centralization.degree (overloaded_net, mode = "all")$centralization,
                        igraph:: cluster_walktrap(overloaded_net) %>% igraph::modularity(),
                        mean(igraph::degree(overloaded_net, mode="all", normalized = F)),
                        igraph::transitivity(overloaded_net),
                        igraph::assortativity.degree(overloaded_net, directed = T),
                        igraph::eigen_centrality(overloaded_net, directed = F)$value %>%  round(.,2)
                        )) %>%
        dplyr::mutate_if(is.numeric, round, digits = 2) %>%
  data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "intesi_mtric_summ_over", ".csv")) %>%
        flextable(.,  cwidth = 2) 


```

#### Metricas por cada Nodo (Direccionada/Con loops/Overloaded)

```{r rintensiNodemetricsoverloaded, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE,  message = FALSE,}

    metrics <- tibble(nodes_id = V(overloaded_net)$name) %>% 
      dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
      dplyr::select(nodes_id, Nome, V1) %>%
      dplyr::mutate(degree         = igraph::degree(overloaded_net, mode="all", normalized = F),
                    betwe          = igraph::betweenness(overloaded_net) %>% round(.,1),
                    closeness      = igraph::closeness(overloaded_net, mode="all") %>% round(.,4),
                    ClusWalk       = igraph::cluster_walktrap(overloaded_net) %>% membership(),
                    transitivLocal = igraph::transitivity(overloaded_net, type = "local")  %>% round(.,2),
                    Eigen_centr    = igraph::eigen_centrality(overloaded_net, directed = T)$vector %>%  round(.,2)
                    ) %>%
   dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>% clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T))%>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "intensi_all_mtric_over", ".csv")) %>%
      flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %>% 
  write_csv(., path = paste0(tbl_pth, "instensi_overloaded_cluster_summary.csv")) %T>% 
   flextable(.)

```


\pagebreak


# Red Madre

```{r red_all, echo=FALSE,warning=FALSE, message = FALSE, cache = TRUE ,  message = FALSE,}

nt1 <- read_excel(xls.file, sheet = "R6_all") %>%
  dplyr::filter(R_Start_ID != 25 & R_Destiny_ID != 25) %>% 
  dplyr::filter(R_Start_ID != 75 & R_Destiny_ID != 75) %>% 
  dplyr::filter(R_Start_ID != 165 | R_Destiny_ID != 165)


d <- nt1 %>% 
  dplyr::select( R_Start_ID,  R_Destiny_ID, ego = R_Start_ID_ego) %>%
  dplyr::mutate_all(as.character)

net <- graph_from_data_frame(d=  d,
                             vertices = groups %>% dplyr::select(name = ID, V1) ,
                             directed=T)%>%
                      igraph::delete.vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

#save adjacency matrix
as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
  write_csv(., path = paste0(tbl_pth, "adj_m_madre", ".csv"))



#contar egos
nt1 %>% 
  dplyr::mutate_all(as.character) %>%
  dplyr::left_join(., groups, by = c("R_Start_ID" = "ID")) %>%
  dplyr::mutate(dummy = paste0(R_Start_ID, R_Start_ID_ego)) %>% 
  dplyr::filter(!duplicated(dummy)) %>% 
  dplyr::group_by(V1, R_Start_ID_ego) %>% 
  tally() %>%
  dplyr::select(Groups = V1, Ego = R_Start_ID_ego, Ego_count = n) %>%
  ungroup() %>% 
  data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "Rmother_ego_summary", ".csv")) %>%
  flextable(.)

as_tibble(ends(net, E(net))) %>% 
  rename(start = V1, end = V2) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::select( ID_start = V1, everything()) %>% 
  dplyr::left_join(., groups, by = c("end"= "ID")) %>% 
  dplyr::select(start, end,  ID_start,ID_end = V1, everything()) %>% 
  group_by(ID_start, ID_end) %>% 
  tally() %>% 
   dplyr::select(Group_start = ID_start, Group_end = ID_end, Links_count = n) %>% 
  write_csv(.,  path = paste0(tbl_pth, "madre_node_links_count", ".csv"))



```

\pagebreak

### Grupo A2

```{r r6_allgrA2, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = TRUE,  message = FALSE}

a2 <- groups %>% filter(V1 == "A2") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

net_no_dir <- net

#save adjacency matrix
  as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>%
    write_csv(., path = paste0(tbl_pth, "adj_m_madre_Nodir", ".csv"))


edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "A2" ~ "tomato",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)

plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "A2 net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")

```


\pagebreak

### Grupo A

```{r r6_allgrA, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE,  message = FALSE}
#
set.seed(123)

a2 <- groups %>% filter(V1 == "A") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "A" ~ "olivedrab3",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "A net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")

```

\pagebreak

### Grupo B

```{r r6_allgrB, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE ,message = FALSE}

set.seed(123)

a2 <- groups %>% filter(V1 == "B") %>% pull(ID)

d2 <- d %>%  
  dplyr::mutate(col = case_when( R_Start_ID  %in% a2 ~ "orange", TRUE ~ "gray80"))

net <- graph_from_data_frame(d=  d2,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

edge.col <- E(net)$col


v.col <- groups %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "B" ~ "gold",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) %>%
  pull(v.col)

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= edge.col,
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col,
     asp = 0)

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

legend("bottomright", c( "B net", "Others Net"), lty = c(1,1), col = c("orange", "gray50"), lwd = c(3,3), pt.cex=2, cex=0.8, bty="n")


```

\pagebreak

### Entrevistados red Madre

```{r rMadreentrev, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = FALSE}

set.seed(123)

red <- "Madre"

  net <- graph_from_data_frame(d =  d,
                               vertices =  groups %>% dplyr::select(name = ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

  
#cambiar color segun status
entrev_col <- entrevistados %>% 
  dplyr::mutate(v.col = case_when(
    status == "entrevistado" ~ "gold",
    TRUE ~ "royalblue3"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray50",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = entrev_col$v.col,
     asp = 0)

legend("topleft" , c("Entrevistado","No entrevistado"), 
       pch = c(21, 21),
       col= c("gold","royalblue3"), pt.bg= c("gold", "royalblue3"), 
       pt.cex=2, cex=.8, bty = "n",  title="Status")


entrev_col %>% 
  dplyr::left_join(., groups) %>% 
  dplyr::select(Node = ID, status, Nome, Group = V1)%T>% 
   write_csv(., path = paste0(tbl_pth, "entrev_", red, ".csv")) %>% 
  flextable(.)

entrev_col %>% 
  dplyr::left_join(., groups) %>% 
  dplyr::group_by(V1, status) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, status, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "entrev_", red, "_freq_byGRoup", ".csv")) %>%
  flextable(.)

```

\pagebreak

### Tipo de tipo de organização

```{r rMadre_tipo_org, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = FALSE}

set.seed(123)

red <- "Madre"

  net <- graph_from_data_frame(d =  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

  
  
  color_vec <- brewer.pal(4,"Set1")

#cambiar color segun status
  vtx_col <- type_org %>% 
  dplyr::mutate(v.col = case_when(
    V39a == "1" ~ color_vec[1],
    V39a == "2" ~ color_vec[2],
    V39a == "3" ~ color_vec[3],
    V39a == "4" ~ color_vec[4],
    TRUE ~ "gray70"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

  
par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray50",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = vtx_col$v.col,
     asp = 0)

legend("topleft" , unique(vtx_col$V39a_lab) , 
       pch = c(21, 21),
       col=  unique(vtx_col$v.col), pt.bg= unique(vtx_col$v.col), 
       pt.cex=2, cex=.8, bty = "n",  title="Tipo de organização")


vtx_col %T>% 
   write_csv(., path = paste0(tbl_pth, "type_org_", red, ".csv")) %>% 
  flextable(.)

vtx_col %>% 
  dplyr::group_by(V1, V39a_lab) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, Type_V39a = V39a_lab, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "type_org_", red, "_V39a_byGRoup", ".csv")) %>%
  flextable(.)

vtx_col %>% 
  dplyr::group_by(V1, V39b_lab) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, Type_v39b = V39b_lab, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "type_org_", red, "_V39b_byGRoup", ".csv")) %>%
  flextable(.)

```

\pagebreak

### Entrevistado y Tipo de organização

```{r rMadre_entre_tipo_org, echo=FALSE,fig.width=15, fig.height=11,warning=FALSE,strip.white=FALSE, cache = FALSE}

set.seed(123)

red <- "Madre"

  net <- graph_from_data_frame(d =  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))

  
 
 color_vec <- brewer.pal(4,"Set1")
#cambiar color segun status
  vtx_col <- type_org %>% 
  dplyr::mutate(v.col = case_when(
    V39a == "1" ~ color_vec[1],
    V39a == "2" ~ color_vec[2],
    V39a == "3" ~ color_vec[3],
    V39a == "4" ~ color_vec[4],
    TRUE ~ "gray70"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

  
  entrev_col <- entrevistados %>% 
  dplyr::mutate(v.shp = case_when(
    status == "entrevistado" ~ "circle",
    TRUE ~ "square"
  )) %>% 
  dplyr::filter(ID %in% V(net)$name) 

  
par(bg = NA)
plot(net, 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray50",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = entrev_col$v.shp,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = vtx_col$v.col,
     asp = 0)

legend("topleft" , unique(vtx_col$V39a_lab) , 
       pch = rep(21, length(unique(vtx_col$V39a_lab))),
       col=  unique(vtx_col$v.col), pt.bg= unique(vtx_col$v.col), 
       pt.cex=2, cex=.8, bty = "n",  title="Tipo de organização")

legend("bottomleft" , c("No entrevistados", "Entrevistados") , 
       pch = c(22, 21),
       col=  c("black", "black"), pt.bg= c("black", "black"), 
       pt.cex=2, cex=.8, bty = "n",  title="Status")

vtx_col %>%
  left_join(., entrev_col, by = c("ID" = "ID"),  suffix = c("", ".to_remove")) %>%
  dplyr::select(-contains("to_remove")) %>% 
  dplyr::select(Group = ID, V39a:V39b_lab, status) %T>% 
   write_csv(., path = paste0(tbl_pth, "entrev_type_org_", red, ".csv")) %>% 
  flextable(.)

vtx_col %>%
  left_join(., entrev_col, by = c("ID" = "ID"),  suffix = c("", ".to_remove")) %>%
  dplyr::select(-contains("to_remove")) %>% 
  dplyr::select(Group = ID, V39a:V39b_lab, status) %>%  
  dplyr::group_by(V1,  status, V39a_lab) %>% 
  tally() %>% 
  dplyr::mutate(freq = round(n/sum(n)*100,1), Frequency = paste0(freq, "%")) %>% 
  dplyr::select(Group = V1, status, Type_V39a = V39a_lab, Count = n, Frequency) %T>%
  write_csv(., path = paste0(tbl_pth, "entrev_type_org_", red, "_byGR", ".csv")) %>%
  flextable(.)



```


\pagebreak

### Red Madre con Intensificación (Overloaded)

```{r r6_all_over, echo=FALSE,fig.width=15, fig.height=10,warning=FALSE,strip.white=FALSE, message = FALSE, cache = TRUE}
 
nt1 <- read_excel(xls.file, sheet = "R6_all") %>%
  dplyr::filter(R_Start_ID != 25 & R_Destiny_ID != 25) %>% 
  dplyr::filter(R_Start_ID != 75 & R_Destiny_ID != 75)



nt_int <- read_excel(xls.file, sheet = "R_intensificação") %>%
  dplyr::filter(R_Start_ID != 25 & R_Destiny_ID != 25) %>% 
  dplyr::filter(R_Start_ID != 75 & R_Destiny_ID != 75) %>% 
dplyr::mutate(dupla = paste0(R_Start_ID, "-", R_Destiny_ID))


d <-  nt1  %>% dplyr::mutate(dupla = paste0(R_Start_ID, "-", R_Destiny_ID)) %>% 
   inner_join(., nt_int, by = c("dupla" = "dupla")) %>% 
   dplyr::select(R_Start_ID = R_Start_ID.x,	R_Start_ID_ego = R_Start_ID_ego.x, R_Destiny_ID =	R_Destiny_ID.x,	type,	R_b)%>%
  dplyr::mutate_all(as.character) %>% 
  dplyr::select(R_Start_ID, R_Destiny_ID, everything())



  net <- graph_from_data_frame(d=  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0)
  
#save adjacency matrix
as_adjacency_matrix(net, type = "both", sparse = F) %>% 
  as.data.frame() %>% 
  write_csv(., path = paste0(tbl_pth, "adj_m_madre_over", ".csv"))


#overloaded_net <- net
## tamaño de los edges

  
  
colrs <- c("olivedrab3", "tomato", "gold", "gray40")
v.color <- tibble(V1 = V(net)$V1) %>% 
                  dplyr::mutate(v.col = case_when( V1 == "A2" ~ "tomato",
                                                   V1 == "A" ~  "olivedrab3",
                                                   V1 == "B" ~ "gold",
                                                   TRUE ~  "gray40")) %>%  pull(v.col)


V(net)$color <- v.color

set.seed(123)


edge.col <- tibble(var = E(net)$R_b) %>% 
  dplyr::mutate(col = dplyr::recode(var,  "0" = "orange", "1" =  "darkgreen",  "2" = "grey70", "3" =  "grey70" )) %>% pull(col) 
  

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

par(mar = c(0.5, 0.5, 0.5, 0.5))
plot(net, 
     layout=layout_with_kk, 
     edge.arrow.size=0.85, 
     rescale=T,
     edge.color=edge.col,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.7,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black")

legend("topright" , c("Group A","Group A2", "Group B", "Group C"), pch = c(21, 21, 21,21),
       col= c("black","black", "black", "black"), pt.bg= c(colrs), pt.cex=2, cex=.8, bty = "n",  title="GROUPS")
legend("bottomright", c( "Sim", "Não", "Não se aplica", "Não disponível"), lty = c(1,1, 1, 1), col = c("darkgreen", "orange", "grey70", "grey70"), lwd = c(3,3,3,3), pt.cex=2, cex=0.8, bty="n", title = "R_b")


```


\pagebreak

### Red Madre Grupo C (sin loops/sin egos)

```{r r6_all_grC_, echo=FALSE,fig.width=15, fig.height=10,warning=FALSE,strip.white=FALSE, message = FALSE, cache = TRUE}
 
nt1 <- read_excel(xls.file, sheet = "R6_all") %>%
  dplyr::filter(R_Start_ID != 25 & R_Destiny_ID != 25) %>% 
  dplyr::filter(R_Start_ID != 75 & R_Destiny_ID != 75)


d <-  nt1 %>%  
  dplyr::mutate_all(as.character) %>% 
  dplyr::select(R_Start_ID, R_Destiny_ID, everything())



  net <- graph_from_data_frame(d=  d,
                               vertices = groups %>% dplyr::select(ID, V1),
                               directed=F)%>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))
  


overloaded_net <- net
  
colrs <- c("olivedrab3", "tomato", "gold", "gray40")
v.color <- tibble(V1 = V(net)$V1) %>% 
                  dplyr::mutate(v.col = case_when( V1 == "A2" ~ "tomato",
                                                   V1 == "A" ~  "olivedrab3",
                                                   V1 == "B" ~ "gold",
                                                   TRUE ~  "gray40")) %>%  pull(v.col)


V(net)$color <- v.color

set.seed(123)


edge.col <- NULL
  

igraph::add_shape("triangle", clip=igraph::shapes("circle")$clip,
                 plot=mytriangle)

par(mar = c(0.5, 0.5, 0.5, 0.5))
plot(net, 
     layout=layout_with_fr, 
     edge.arrow.size=0.85, 
     rescale=T,
     edge.color=edge.col,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(net)$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.7,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black")

legend("topright" , c("Group A","Group A2", "Group B", "Group C"), pch = c(21, 21, 21,21),
       col= c("black","black", "black", "black"), pt.bg= c(colrs), pt.cex=2, cex=.8, bty = "n",  title="GROUPS")
# legend("bottomright", c( "Sim", "Não", "Não se aplica", "Não disponível"), lty = c(1,1, 1, 1), col = c("darkgreen", "orange", "grey70", "grey70"), lwd = c(3,3,3,3), pt.cex=2, cex=0.8, bty="n", title = "R_b")


```


\pagebreak

### Metricas Generales Red de madre (No direccionada)

```{r rmadreSummMetricsNOdir, echo=FALSE,warning=FALSE,strip.white=FALSE}

      tibble(Metric = c("density", "centraBetw", "centraDeg", "modularidad", "meanDegree", "transitiv", "assorta", "EigenValue"),
             Value  = c(igraph::edge_density(net_no_dir, loops = FALSE),
                        igraph::centralization.betweenness(net_no_dir)$centralization,
                        igraph::centralization.degree (net_no_dir, mode = "all")$centralization,
                        igraph:: cluster_walktrap(net_no_dir) %>% igraph::modularity(),
                        mean(igraph::degree(net_no_dir, mode="all", normalized = F)),
                        igraph::transitivity(net_no_dir),
                        igraph::assortativity.degree(net_no_dir, directed = T),
                        igraph::eigen_centrality(net_no_dir, directed = T)$value %>%  round(.,2)
                        )) %>%
        dplyr::mutate_if(is.numeric, round, digits = 2) %>%
   data.frame()  %T>% 
   write_csv(., path = paste0(tbl_pth, "madre_mtric_summ_Ndir", ".csv")) %>%
        flextable(.,  cwidth = 2)

         
```


#### Metricas por cada Nodo (No direccionada)

```{r rmadreNodemetricsNodir, echo=FALSE,warning=FALSE,fig.width=11, fig.height=11,strip.white=FALSE,  message = FALSE,}

    metrics <- tibble(nodes_id = V(net_no_dir)$name) %>% 
      dplyr::left_join(., groups, by = c("nodes_id" = "ID")) %>%
      dplyr::select(nodes_id, Nome, V1) %>%
      dplyr::mutate(degree         = igraph::degree(net_no_dir, mode="all", normalized = F),
                    betwe          = igraph::betweenness(net_no_dir) %>% round(.,1),
                    closeness      = igraph::closeness(net_no_dir, mode="all") %>% round(.,4),
                    ClusWalk       = igraph:: cluster_walktrap(net_no_dir) %>% membership(),
                    transitivLocal = igraph::transitivity(net_no_dir, type = "local")  %>% round(.,2),
                    Eigen_centr    = igraph::eigen_centrality(net_no_dir, directed = F)$vector %>%  round(.,2)
                    ) %>%
     dplyr::mutate( HClust         = dplyr::select(., degree, betwe, closeness, Eigen_centr ) %>%    clustering(data =., k = 4, dist.method = "euclidean", scale.unit = T)) %>% 
  dplyr::left_join(., entrevistados, by = c("nodes_id"= "ID")) %>% 
  dplyr::left_join(., type_org %>% dplyr::select(ID, V39a_lab, V39b_lab), by = c("nodes_id"= "ID"))

metrics %>% 
  data.frame()  %T>% 
  write_csv(., path = paste0(tbl_pth, "madre_all_mtric_Ndir", ".csv")) %>%
      flextable(.)

metrics %>% 
  dplyr::group_by(HClust) %>% 
  dplyr::summarise_if(is.numeric, list(~mean(.),~sd(.))) %>% 
  write_csv(., path = paste0(tbl_pth,"redmama_NoDir_cluster_summary.csv")) %T>% 
   flextable(.)

```

\pagebreak

### Rankings

```{r r6_all_ranking_Node, echo=FALSE,warning=FALSE,strip.white=FALSE, message = FALSE, cache = TRUE}

my_function <- function(st = NA, en = NA , df ){
  
 df <- df %>% 
    dplyr::select(Nome_start,    Nome_dest) %>% 
    mutate(dm = paste(Nome_dest, "-", Nome_start)) 
 cond <- c(paste(st, "-", en), paste(en, "-", st)) %in%  df$dm
 
if(any(cond)){
  
  tot <- df %>%
    dplyr::filter((Nome_start == st & Nome_dest == en)|(Nome_start == en & Nome_dest == st)) %>% 
      nrow()
 
if(cond[1]){
   lab <- paste(st, "-", en)
  }else if(cond[2]){
   lab <- paste(st, "-", en)
  }

}else{tot  <- NA}  
  
  
final <- data.frame(Tie =  lab, Count = tot)
  return(final)
}

nt1 <- read_excel(xls.file, sheet = "R6_all") %>%
  dplyr::filter(R_Start_ID != 25 & R_Destiny_ID != 25) %>% 
  dplyr::filter(R_Start_ID != 75 & R_Destiny_ID != 75)



d <- nt1 %>% 
  dplyr::select( R_Start_ID,  R_Destiny_ID, ego = R_Start_ID_ego) %>%
  dplyr::mutate_all(as.character)


df_dummy<- d %>% 
  left_join(., y = groups, by = c("R_Start_ID" = "ID")) %>%
  dplyr::select(R_Start_ID:Nome) %>% 
  rename(Nome_start = Nome) %>% 
  left_join(., y = groups, by = c("R_Destiny_ID" = "ID")) %>% 
  dplyr::select(R_Start_ID:Nome) %>%
  rename(Nome_dest = Nome) 

  purrr::pmap(list(st = df_dummy$Nome_start, en =df_dummy$Nome_dest), .f = my_function, df = df_dummy) %>% 
    do.call(rbind,.) %>% 
    data.frame() %>% 
    dplyr::filter(!duplicated(Tie), !is.na(Count)) %>% 
    arrange(desc(Count)) %>% 
    dplyr::mutate(score = Count/max(Count)) %>% 
    dplyr::select(-Count) %T>% 
    write_csv(., path = paste0(tbl_pth, "ranking_company", ".csv")) %>% 
    flextable(., cwidth = 2)
    
```

\pagebreak

```{r r6_all_ranking_Ego, echo=FALSE,warning=FALSE,strip.white=FALSE, message = FALSE, cache = FALSE}
d %>% 
  left_join(., y = groups, by = c("R_Start_ID" = "ID")) %>%
  dplyr::select(R_Start_ID:Nome) %>% 
  rename(Nome_start = Nome) %>% 
  left_join(., y = groups, by = c("R_Destiny_ID" = "ID")) %>% 
  select(R_Start_ID:Nome) %>%
  rename(Nome_dest = Nome) %>% 
  dplyr::mutate(tie = paste0(Nome_start, "_", ego, "-", Nome_dest)) %>% 
  group_by(tie) %>% 
  tally() %>% 
  arrange(desc(n)) %>% 
  dplyr::mutate(n = n/max(n)) %>%
  rename(score = n) %>% 
  data.frame %T>%
  write_csv(., path = paste0(tbl_pth, "ranking_egos", ".csv")) %>%
  flextable(.)

 
```


\pagebreak

# Red grupo C

```{r rgrupoC, echo=FALSE, fig.height=10, fig.width=15, message=FALSE, warning=FALSE, cache=TRUE, strip.white=FALSE}
 
nt1 <- read_excel(xls.file, sheet = "R5_outras_orgs") %>%
  dplyr::filter(R_Start_ID != 25 | R5b_Destiny_ID != 25) %>% 
  dplyr::filter(R_Start_ID != 75 | R5b_Destiny_ID != 75) %>% 
  dplyr::filter(R_Start_ID != 165 | R5b_Destiny_ID != 165) %>% 
  dplyr::mutate_all(as.character) %>% 
  dplyr::mutate(R5c = case_when(
  R5c == "1" ~ "Negócios",
R5c == "2" ~	"Investimento",
R5c == "3" ~	"Cooperação técnica",
R5c == "4" ~ "Colaboração" ,
R5c == "5" ~	"Outro",
TRUE ~ "Não identificado"
  ),
R5a = case_when(
  R5a == "1" ~ "1 a 5",
R5a == "2" ~	"6 a 10",
R5a == "3" ~	"11 a 20",
R5a == "4" ~ "Mais de 20" ,
R5a == "5" ~	"Nao sei",
TRUE ~ "Não identificado"
  )
) %>% 
  filter(!is.na(R5b_Destiny_ID))


net_c <- nt1 %>% 
   dplyr::left_join(., groups, by = c("R_Start_ID" = "ID")) %>%
   dplyr::left_join(., groups, by = c("R5b_Destiny_ID" = "ID")) %>% 
   dplyr::select(R_Start_ID:R5c, V1_gr = V1.x, V1_c = V1.y, Nome = Nome.x, Nome_c = Nome.y)

net_c %>% 
  group_by(V1_gr, R5c, V1_c) %>% 
    tally() %>% 
  dplyr::mutate(V1_c = ifelse(is.na(V1_c),"0", V1_c)) %>% 
  dplyr::filter(V1_c != "A") %>% 
  dplyr::select(Group_ID = V1_gr, "Tipos de relação" = R5c, Group_c_ID = V1_c, Count = n) %>% 
  as.data.frame() %T>% 
  write_csv(., path = paste0(tbl_pth, "group_c_R5c_frecuencies", ".csv")) %>%
      flextable(.,  cwidth = 2)

net_c %>% 
  group_by(V1_gr, R5a, V1_c) %>% 
    tally() %>% 
  dplyr::mutate(V1_c = ifelse(is.na(V1_c),"0", V1_c)) %>% 
  dplyr::filter(V1_c != "A") %>% 
  dplyr::select(Group_ID = V1_gr, "Tipos de relação" = R5a, Group_c_ID = V1_c, Count = n) %>% 
  as.data.frame() %T>% 
  write_csv(., path = paste0(tbl_pth, "group_c_R5a_frecuencies", ".csv")) %>%
      flextable(.,  cwidth = 2) 
 
d <- nt1 %>% 
  dplyr::select( R_Start_ID, R5b_Destiny_ID , ego = R_Start_ID_ego) %>%
  dplyr::mutate_all(as.character) 

net <- graph_from_data_frame(d=  d,
                             vertices = groups %>% dplyr::select(name = ID, V1) ,
                             directed=T)%>%
                      igraph::delete.vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))



as_tibble(ends(net, E(net))) %>% 
  rename(start = V1, end = V2) %>% 
  left_join(., groups, by = c("start" = "ID")) %>% 
  dplyr::select( ID_start = V1, everything()) %>% 
  dplyr::left_join(., groups, by = c("end"= "ID")) %>% 
  dplyr::select(start, end,  ID_start,ID_end = V1, everything()) %>% 
  group_by(ID_start, ID_end) %>% 
  tally() %>% 
  dplyr::select(Group_start = ID_start, Group_end = ID_end, Links_count = n) %>% 
  write_csv(.,  path = paste0(tbl_pth, "grupoC_node_links_count", ".csv"))



```

\pagebreak

## red Grupo A2 y C

```{r rGrc_A2, echo=FALSE, fig.height=15, fig.width=15, message=FALSE, warning=FALSE, strip.white=FALSE}
#
set.seed(123)


all_c_net <- lapply(unique(net_c$R5c), function(i){
  
  nc <- tryCatch({
    net_c %>% 
    dplyr::filter(V1_gr == "A2", !V1_c %in% c("A", "A2", "B") ) %>% 
    dplyr::filter(R5c == i) %>% 
    dplyr::select(R_Start_ID , R5b_Destiny_ID, V1_gr ) %>% 
    graph_from_data_frame(d=.,
                          vertices = groups %>% dplyr::select(ID, V1),
                          directed=F) %>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))
    
    

  }, error = function(e){
    return(NA)
  })
  
  return(nc)
})



v.col <- lapply(all_c_net, function(i){
  v.col <- tryCatch({
      tibble(ID = V(i)$name) %>% 
  dplyr::left_join(., groups) %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "A2" ~ "tomato",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(i)$name) %>%
  pull(v.col)
    }, error = function(e){
      return(NA)
    })
})


par(mfrow=c(2,2), mar=c(1,1,1,1))


plot(all_c_net[[1]], 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(all_c_net[[1]])$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col[[1]],
     asp = 0,
     main = unique(net_c$R5c)[1])
legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

plot(all_c_net[[2]], 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(all_c_net[[2]])$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col[[2]],
     asp = 0,
     main = unique(net_c$R5c)[2])

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

plot(all_c_net[[3]], 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(all_c_net[[3]])$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col[[3]],
     asp = 0,
     main = unique(net_c$R5c)[3])
legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

plot(all_c_net[[4]], 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(all_c_net[[4]])$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col[[4]],
     asp = 0,
     main = unique(net_c$R5c)[4])

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")


```

## Red grupo A y C

```{r rGrc_A, echo=FALSE,fig.width=15, fig.height=15,warning=FALSE,strip.white=FALSE,  message = FALSE}
#
set.seed(123)

all_c_net <- lapply(unique(net_c$R5c), function(i){
  
  nc <- tryCatch({
    net_c %>% 
    dplyr::filter(V1_gr == "A", !V1_c %in% c("A", "A2", "B") ) %>% 
    dplyr::filter(R5c == i) %>% 
    dplyr::select(R_Start_ID , R5b_Destiny_ID, V1_gr ) %>% 
    graph_from_data_frame(d=.,
                          vertices = groups %>% dplyr::select(ID, V1),
                          directed=F) %>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))
  }, error = function(e){
    return(NA)
  })
  
  return(nc)
})

v.col <- lapply(all_c_net, function(i){
  v.col <- tryCatch({
      tibble(ID = V(i)$name) %>% 
  dplyr::left_join(., groups) %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "A" ~ "olivedrab3",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(i)$name) %>%
  pull(v.col)
    }, error = function(e){
      return(NA)
    })
})


par(mfrow=c(2,2), mar=c(1,1,1,1))


plot(all_c_net[[1]], 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(all_c_net[[1]])$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col[[1]],
     asp = 0,
     main = unique(net_c$R5c)[1])
legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

plot(all_c_net[[2]], 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(all_c_net[[2]])$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col[[2]],
     asp = 0,
     main = unique(net_c$R5c)[2])

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

plot(all_c_net[[3]], 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(all_c_net[[3]])$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col[[3]],
     asp = 0,
     main = unique(net_c$R5c)[3])
legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

plot(all_c_net[[4]], 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(all_c_net[[4]])$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col[[4]],
     asp = 0,
     main = unique(net_c$R5c)[4])

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")


```

\pagrebreak

## Red grupo B y C

```{r rGrc_B, echo=FALSE,fig.width=15, fig.height=15,warning=FALSE,strip.white=FALSE,  message = FALSE}
#
set.seed(123)


all_c_net <- lapply(unique(net_c$R5c), function(i){
  
  nc <- tryCatch({
    net_c %>% 
    dplyr::filter(V1_gr == "B", !V1_c %in% c("A", "A2", "B") ) %>% 
    dplyr::filter(R5c == i) %>% 
    dplyr::select(R_Start_ID , R5b_Destiny_ID, V1_gr ) %>% 
    graph_from_data_frame(d=.,
                          vertices = groups %>% dplyr::select(ID, V1),
                          directed=F) %>%
  igraph::delete_vertices(., igraph::degree(.) == 0) %>% 
  igraph::delete_edges(., edges = which(igraph::which_multiple(.)))
  }, error = function(e){
    return(NA)
  })
  
  return(nc)
})

v.col <- lapply(all_c_net, function(i){
  v.col <- tryCatch({
      tibble(ID = V(i)$name) %>% 
  dplyr::left_join(., groups) %>% 
  dplyr::mutate(v.col = case_when(
    V1 == "B" ~ "gold",
    TRUE ~ "gray50"
  )) %>% 
  dplyr::filter(ID %in% V(i)$name) %>%
  pull(v.col)
    }, error = function(e){
      return(NA)
    })
})


par(mfrow=c(2,2), mar=c(1,1,1,1))


plot(all_c_net[[1]], 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(all_c_net[[1]])$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col[[1]],
     asp = 0,
     main = unique(net_c$R5c)[1])
legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

plot(all_c_net[[2]], 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(all_c_net[[2]])$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col[[2]],
     asp = 0,
     main = unique(net_c$R5c)[2])

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

plot(all_c_net[[3]], 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(all_c_net[[3]])$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col[[3]],
     asp = 0,
     main = unique(net_c$R5c)[3])
legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")

plot(all_c_net[[4]], 
     layout= layout_with_kk, 
     edge.arrow.size=0.5, 
     rescale=T,
     edge.color= "gray70",
     edge.width = 2.5,
     vertex.size = 6.5,
     vertex.shape = NULL,
     vertex.label.dist=0,
     vertex.label= V(all_c_net[[4]])$name,
     vertex.label.family = "Arial",
     vertex.label.font	= 2,
     vertex.label.cex = 0.9,
     vertex.label.dist = 150,
     vertex.label.degree = -pi/2,
     vertex.label.color="black",
     vertex.color = v.col[[4]],
     asp = 0,
     main = unique(net_c$R5c)[4])

legend("topright" , c("Group A","Group A2", "Group B"), 
       pch = c(21, 21, 21),
       col= c("black","black", "black", "black"), pt.bg= c("olivedrab3", "tomato", "gold"), 
       pt.cex=2, cex=.8, bty = "n",  title="GROUPS")


```